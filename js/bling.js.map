{
  "version": 3,
  "file": "bling.js",
  "sourceRoot": "",
  "sources": [
    "bling.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "Object.keys or= (o) => (k for k of o)\nObject.values or= (o) => (o[k] for k of o)\nextend = (a, b...) =>\n\tfor obj in b when obj\n\t\ta[k] = v for k,v of obj \n\ta\nBling = (args...) ->\n\t\"Bling:nomunge\"\n\tif args.length is 1 \n\t\targs = $.type.lookup(args[0]).array(args[0])\n\tb = $.inherit Bling, args\n\tif args.length is 0 and args[0] isnt undefined\n\t\ti = 0\n\t\ti++ while args[i] isnt undefined\n\t\tb.length = i\n\tif 'init' of Bling \n\t\treturn Bling.init(b)\n\treturn b\n$ = Bling\n$.global = do -> @\n$.plugin = (opts, constructor) ->\n\tif not constructor\n\t\tconstructor = opts\n\t\topts = {}\n\t\n\t_t = @\n\tif \"depends\" of opts\n\t\treturn _t.depends opts.depends, ->\n\t\t\t_t.plugin { provides: opts.provides }, constructor\n\ttry\n\t\tif typeof (plugin = constructor?.call _t,_t) is \"object\"\n\t\t\textend @, plugin.$\n\t\t\tdelete plugin.$\n\t\t\textend _t.prototype, plugin\n\t\t\tfor key of plugin then do (key) ->\n\t\t\t\t_t[key] or= (a...) -> (_t.prototype[key].apply $(a[0]), a[1...])\n\t\t\tif opts.provides? then _t.provide opts.provides\n\tcatch error\n\t\tconsole.error \"plugin failed '#{_t.name}':\", ($.debugStack ? $.identity ? (x) -> x) error.stack\n\t@\nextend $, do ->\n\twaiting = []\n\tcomplete = {}\n\tcommasep = /, */\n\tnot_complete = (x) -> not (x of complete)\n\tincomplete = (n) ->\n\t\t(if (typeof n) is \"string\" then n.split commasep else n)\n\t\t.filter not_complete\n\tdepends: (needs, func) ->\n\t\tif (needs = incomplete needs).length is 0 then func()\n\t\telse waiting.push (need) ->\n\t\t\t(needs.splice i, 1) if (i = needs.indexOf need) > -1\n\t\t\treturn (needs.length is 0 and func)\n\t\tfunc\n\tprovide: (needs, data) ->\n\t\tcaught = []\n\t\tfor need in incomplete needs\n\t\t\tcomplete[need] = i = -1\n\t\t\twhile ++i < waiting.length \n\t\t\t\tif (f = waiting[i] need) \n\t\t\t\t\twaiting.splice i,1 \n\t\t\t\t\ttry f data \n\t\t\t\t\tcatch err then caught.push(err) \n\t\t\t\t\ti = -1 \n\t\tif caught.length > 0\n\t\t\tf = $.debugStack ? $.identity ? (x) -> x.stack\n\t\t\tcaught.map(f).forEach(console.error.bind console)\n\t\tdata\n$.plugin\n\tdepends: \"core\"\n\tprovides: \"async,series,parallel\"\n, ->\n\treturn {\n\t\tseries: (fin = $.identity) ->\n\t\t\tret = $()\n\t\t\ttodo = @length\n\t\t\tunless todo > 0\n\t\t\t\tfin.apply ret, ret\n\t\t\telse\n\t\t\t\tdone = 0\n\t\t\t\tfinish_one = (index) -> -> \n\t\t\t\t\tret[index] = arguments \n\t\t\t\t\tif ++done >= todo then fin.apply ret, ret \n\t\t\t\t\telse next done\n\t\t\t\t\tnull\n\t\t\t\tdo next = (i=0) => $.immediate => @[i] finish_one i\n\t\t\t@\n\t\tparallel: (fin = $.identity) ->\n\t\t\tret = $()\n\t\t\ttodo = @length\n\t\t\tunless todo > 0\n\t\t\t\tfin.apply ret, ret\n\t\t\telse\n\t\t\t\tdone = 0\n\t\t\t\tfinish_one = (index) -> -> \n\t\t\t\t\tret[index] = arguments\n\t\t\t\t\tif ++done >= todo\n\t\t\t\t\t\tfin.apply ret, ret\n\t\t\t\t\tnull\n\t\t\t\tfor i in [0...todo] by 1\n\t\t\t\t\t@[i] finish_one i\n\t\t\t@\n\t}\n$.plugin\n\tprovides: \"cache, Cache\"\n\tdepends: \"core, sortBy, logger\"\n, ->\n\tclass EffCache\n\t\tlog = $.logger \"[LRU]\"\n\t\tconstructor: (@capacity = 1000, @defaultTtl = Infinity) ->\n\t\t\t@capacity = Math.max 0, @capacity\n\t\t\t@evictCount = Math.max 3, Math.floor @capacity * .1\n\t\t\tindex = Object.create null\n\t\t\torder = []\n\t\t\teff = (o) -> -o.r / o.w\n\t\t\tautoEvict = =>\n\t\t\t\treturn unless @capacity > 0\n\t\t\t\tif order.length >= @capacity\n\t\t\t\t\twhile order.length + @evictCount - 1 >= @capacity\n\t\t\t\t\t\tdelete index[k = order.pop().k]\n\t\t\t\tnull\n\t\t\treIndex = (i, j) ->\n\t\t\t\tfor x in [i..j] when 0 <= x < order.length\n\t\t\t\t\tindex[order[x].k] = x\n\t\t\t\tnull\n\t\t\trePosition = (i) ->\n\t\t\t\tobj = order[i]\n\t\t\t\tj = $.sortedIndex order, obj, eff\n\t\t\t\tif j isnt i\n\t\t\t\t\torder.splice i, 1\n\t\t\t\t\torder.splice j, 0, obj\n\t\t\t\t\treIndex i, j\n\t\t\t\tnull\n\t\t\tnoValue\t= v: undefined\n\t\t\t$.extend @,\n\t\t\t\thas: (k) -> k of index\n\t\t\t\tdel: (k) ->\n\t\t\t\t\tif k of index\n\t\t\t\t\t\ti = index[k]\n\t\t\t\t\t\torder.splice i, 1\n\t\t\t\t\t\tdelete index[k]\n\t\t\t\t\t\treIndex i, order.length - 1\n\t\t\t\tset: (k, v, ttl = @defaultTtl) =>\n\t\t\t\t\treturn v unless @capacity > 0\n\t\t\t\t\tif k of index\n\t\t\t\t\t\td = order[i = index[k]]\n\t\t\t\t\t\td.v = v\n\t\t\t\t\t\td.w += 1\n\t\t\t\t\t\trePosition i\n\t\t\t\t\telse\n\t\t\t\t\t\tautoEvict()\n\t\t\t\t\t\titem = { k, v, r: 0, w: 1 }\n\t\t\t\t\t\ti = $.sortedIndex order, item, eff\n\t\t\t\t\t\torder.splice i, 0, item\n\t\t\t\t\t\treIndex i, order.length - 1\n\t\t\t\t\tif ttl < Infinity\n\t\t\t\t\t\t$.delay ttl, =>\n\t\t\t\t\t\t\t@del(k)\n\t\t\t\t\tv\n\t\t\t\tget: (k) ->\n\t\t\t\t\tret = noValue\n\t\t\t\t\tif k of index\n\t\t\t\t\t\ti = index[k]\n\t\t\t\t\t\tret = order[i]\n\t\t\t\t\t\tret.r += 1\n\t\t\t\t\t\trePosition i\n\t\t\t\t\tret.v\n\t\t\t\tclear: ->\n\t\t\t\t\tfor k of index \n\t\t\t\t\t\torder[index[k]] = null\n\t\t\t\t\tindex = Object.create(null)\n\t\t\t\t\torder = []\n\treturn $: Cache: $.extend EffCache, new EffCache(10000)\n$.plugin\n\tprovides: \"cartesian\"\n, ->\n\t$:\n\t\tcartesian: (sets...) ->\n\t\t\tn = sets.length\n\t\t\tret = []\n\t\t\thelper = (cur, i) ->\n\t\t\t\tif ++i >= n\n\t\t\t\t\treturn ret.push cur\n\t\t\t\tfor x in sets[i]\n\t\t\t\t\thelper (cur.concat x), i\n\t\t\t\tnull\n\t\t\thelper [], -1\n\t\t\treturn $(ret)\n$.plugin {\n\tprovides: \"clone\"\n\tdepends: \"type\"\n}, ->\n\t$.type.extend {\n\t\tunknown: clone: (s) -> null \n\t\tstring:  clone: (s) -> s + \"\"\n\t\tnumber:  clone: (n) -> n + 0.0\n\t\tarray:   clone: (a) -> a.concat []\n\t\tbling:   clone: (b) -> b.concat []\n\t\tobject:  clone: (o) ->\n\t\t\tret = Object.create(o.__proto__)\n\t\t\tfor own k,v of o then ret[k] = $.type.lookup(v).clone(v)\n\t\t\treturn ret\n\t}\n\treturn { $: { clone: (o) -> $.type.lookup(o).clone(o) } }\n$.plugin\n\tprovides: \"compat,trimLeft,split,lastIndexOf,join,preventAll,matchesSelector,isBuffer,Map\"\n, ->\n\t$.global.Buffer or= { isBuffer: -> false }\n\t$.global.Map or= class Map \n\t\tconstructor: (iterable) ->\n\t\t\tdata = Object.create null\n\t\t\t$.extend @, {\n\t\t\t\tsize:       0\n\t\t\t\tkeys:       -> Object.keys(data)\n\t\t\t\tvalues:     -> (v for k,v of data)\n\t\t\t\tentries:    -> ( [k,v] for k,v of data )\n\t\t\t\thas:    (k) -> k of data\n\t\t\t\tget:    (k) -> data[k]\n\t\t\t\tset: (k, v) ->\n\t\t\t\t\t@size += 1 unless k of data\n\t\t\t\t\tdata[k] = v\n\t\t\t\t\t@\n\t\t\t\tdelete: (k) ->\n\t\t\t\t\t@size -= 1 if k of data\n\t\t\t\t\tdelete data[k]\n\t\t\t\t\t@\n\t\t\t\tclear:      ->\n\t\t\t\t\tdata = Object.create null\n\t\t\t\t\t@size = 0\n\t\t\t\t\t@\n\t\t\t\tforEach: (cb, c) ->\n\t\t\t\t\tcb.call(c,k,v) for k,v of data\n\t\t\t\t\t@\n\t\t\t}\n\t\t\tfor item in iterable ? []\n\t\t\t\t@set item...\n\tsigns = [-1, 1]\n\tMath.sign = (n) -> signs[0 + (n >= 0)]\n\tString.prototype.trimLeft or= -> @replace(/^\\s+/, \"\")\n\tString.prototype.split or= (sep) ->\n\t\ta = []; i = 0\n\t\twhile (j = @indexOf sep,i) > -1\n\t\t\ta.push @substring(i,j)\n\t\t\ti = j + 1\n\t\ta\n\tString.prototype.lastIndexOf or= (s, c, i = -1) ->\n\t\tj = -1\n\t\tj = i while (i = s.indexOf c, i+1) > -1\n\t\tj\n\tArray.prototype.join or= (sep = '') ->\n\t\tn = @length\n\t\treturn \"\" if n is 0\n\t\ts = @[n-1]\n\t\twhile --n > 0\n\t\t\ts = @[n-1] + sep + s\n\t\ts\n\tif Event?\n\t\tEvent.prototype.preventAll = () ->\n\t\t\t@preventDefault()\n\t\t\t@stopPropagation()\n\t\t\t@cancelBubble = true\n\tif Element?\n\t\tElement.prototype.matchesSelector = Element.prototype.webkitMatchesSelector or\n\t\t\tElement.prototype.mozMatchesSelector or\n\t\t\tElement.prototype.matchesSelector\n\treturn { }\n$.plugin {\n\tprovides: \"compress, decompress\"\n}, ->\n\tf = String.fromCharCode\n\tchr = (i) -> f(i+32)\n\t{ pow } = Math\n\t_compress = (input) ->\n\t\tif input in [null,undefined,\"\"]\n\t\t\treturn input\n\t\tdict         = {}\n\t\tdictToCreate = {}\n\t\tc            = \"\"\n\t\twc           = \"\"\n\t\tw            = \"\"\n\t\tenlargeIn    = 2 \n\t\tdictSize     = 3\n\t\tnumBits      = 2\n\t\tdata         = []\n\t\tdata_val     = 0\n\t\tdata_pos     = 0\n\t\tdoSomeBits = (how_many_bits, value=0) ->\n\t\t\tfor i in [0...numBits] by 1\n\t\t\t\tdata_val = (data_val << 1) | value\n\t\t\t\tif data_pos == 14\n\t\t\t\t\tdata_pos = 0\n\t\t\t\t\tdata.push chr data_val\n\t\t\t\t\tdata_val = 0\n\t\t\t\telse\n\t\t\t\t\tdata_pos++\n\t\t\t\tvalue = 0\n\t\t\tvalue = w.charCodeAt(0);\n\t\t\tdoBitsAndOne(how_many_bits, value)\n\t\t\n\t\tdoBitsAndOne = (how_many_bits, value=0) ->\n\t\t\tfor i in [0...how_many_bits] by 1\n\t\t\t\tdata_val = (data_val << 1) | (value&1)\n\t\t\t\tif data_pos == 14\n\t\t\t\t\tdata_pos = 0;\n\t\t\t\t\tdata.push(chr(data_val));\n\t\t\t\t\tdata_val = 0;\n\t\t\t\telse\n\t\t\t\t\tdata_pos++\n\t\t\t\tvalue = value >> 1\n\t\tfor c in input\n\t\t\tunless c of dict\n\t\t\t\tdict[c] = dictSize++\n\t\t\t\tdictToCreate[c] = true;\n\t\t\twc = w + c\n\t\t\tif wc of dict\n\t\t\t\tw = wc\n\t\t\telse\n\t\t\t\tif w of dictToCreate\n\t\t\t\t\tif w.charCodeAt(0)<256\n\t\t\t\t\t\tdoSomeBits(8)\n\t\t\t\t\telse\n\t\t\t\t\t\tdoSomeBits(16, 1)\n\t\t\t\t\tenlargeIn--\n\t\t\t\t\tif enlargeIn == 0\n\t\t\t\t\t\tenlargeIn = pow 2, numBits\n\t\t\t\t\t\tnumBits++\n\t\t\t\t\tdelete dictToCreate[w]\n\t\t\t\telse\n\t\t\t\t\tvalue = dict[w];\n\t\t\t\t\tdoBitsAndOne(numBits, value)\n\t\t\t\tenlargeIn--\n\t\t\t\tif enlargeIn == 0\n\t\t\t\t\tenlargeIn = pow(2, numBits);\n\t\t\t\t\tnumBits++;\n\t\t\t\tdict[wc] = dictSize++\n\t\t\t\tw = String c\n\t\tif w isnt \"\"\n\t\t\tif w of dictToCreate\n\t\t\t\tif w.charCodeAt(0)<256\n\t\t\t\t\tdoSomeBits(8)\n\t\t\t\telse\n\t\t\t\t\tdoSomeBits(16,1)\n\t\t\t\tenlargeIn--;\n\t\t\t\tif enlargeIn == 0\n\t\t\t\t\tenlargeIn = pow 2, numBits\n\t\t\t\t\tnumBits++\n\t\t\t\tdelete dictToCreate[w]\n\t\t\telse\n\t\t\t\tvalue = dict[w]\n\t\t\t\tdoBitsAndOne(numBits, value)\n\t\t\tenlargeIn--\n\t\t\tif enlargeIn == 0\n\t\t\t\tenlargeIn = pow 2, numBits\n\t\t\t\tnumBits++\n\t\tdoBitsAndOne(numBits, 2)\n\t\twhile true\n\t\t\tdata_val = (data_val << 1)\n\t\t\tif data_pos == 14\n\t\t\t\tdata.push chr data_val\n\t\t\t\tbreak\n\t\t\telse data_pos++\n\t\treturn data.join('');\n\t_decompress = (length, resetValue, getNextValue) ->\n\t\treturn \"\" if length is 0\n\t\tdict = []\n\t\tenlargeIn = 4\n\t\tdictSize = 4\n\t\tnumBits = 3\n\t\tentry = \"\"\n\t\tresult = []\n\t\tnext = i = w = resb = c = null\n\t\tdata = {val:getNextValue(0), position:resetValue, index:1}\n\t\tif isNaN(data.val) or not isFinite(data.val) or not data.val?\n\t\t\treturn \"\"\n\t\tdict[0] = 0\n\t\tdict[1] = 1\n\t\tdict[2] = 2\n\t\tdoBits = (bits, maxpower, power=1) ->\n\t\t\twhile power isnt maxpower\n\t\t\t\tresb = data.val & data.position\n\t\t\t\tdata.position >>= 1\n\t\t\t\tif data.position == 0\n\t\t\t\t\tdata.position = resetValue\n\t\t\t\t\tdata.val = getNextValue(data.index++)\n\t\t\t\tr = if resb > 0 then 1 else 0\n\t\t\t\tbits |= r * power;\n\t\t\t\tpower <<= 1;\n\t\t\tbits\n\t\t\n\t\tbits = doBits(0,4,1)\n\t\tswitch next = bits\n\t\t\twhen 0,1\n\t\t\t\tc = f doBits(0, pow(2,8*(c+1)),1)\n\t\t\twhen 2\n\t\t\t\treturn \"\"\n\t\tdict[3] = c\n\t\tw = c\n\t\tresult.push(c)\n\t\twhile true\n\t\t\tif data.index > length\n\t\t\t\treturn \"\";\n\t\t\tswitch c = doBits(0, pow(2,numBits), 1)\n\t\t\t\twhen 0,1\n\t\t\t\t\tdict[dictSize++] = f doBits(0, pow(2,8*(c+1)), 1)\n\t\t\t\t\tc = dictSize-1\n\t\t\t\t\tenlargeIn--\n\t\t\t\twhen 2\n\t\t\t\t\treturn result.join('');\n\t\t\tif enlargeIn == 0\n\t\t\t\tenlargeIn = pow(2, numBits)\n\t\t\t\tnumBits++\n\t\t\tif dict[c]\n\t\t\t\tentry = dict[c]\n\t\t\telse\n\t\t\t\tif c == dictSize\n\t\t\t\t\tentry = w + w.charAt(0)\n\t\t\t\telse\n\t\t\t\t\treturn \"\";\n\t\t\tresult.push(entry)\n\t\t\tdict[dictSize++] = w + entry.charAt(0)\n\t\t\tenlargeIn--\n\t\t\tw = entry\n\t\t\tif enlargeIn == 0\n\t\t\t\tenlargeIn = pow(2, numBits)\n\t\t\t\tnumBits++\n\treturn {\n\t\t$:\n\t\t\tcompress: (input) ->\n\t\t\t\tif input then return _compress(input, 15) + \" \";\n\t\t\t\telse return \"\"\n\t\t\tdecompress: (input) ->\n\t\t\t\tif input then return _decompress input.length, 16384, (i) -> input.charCodeAt(i) - 32\n\t\t\t\telse return \"\"\n\t}\n$.plugin\n\tprovides: 'config'\n\tdepends: 'core'\n, ->\n\tget = (name, def) -> switch arguments.length\n\t\twhen 0 then $.extend {}, process.env\n\t\telse process.env[name] ? def\n\tset = (name, val) -> switch arguments.length\n\t\twhen 1 then $.extend process.env, name\n\t\twhen 2 then process.env[name] = val\n\tparse = (data) ->\n\t\tret = {}\n\t\t$(data.toString(\"utf8\").split \"\\n\") \\\n\t\t\t.filter($.isEmpty, false) \\\n\t\t\t.filter(/^#/, false) \\\n\t\t\t.map(-> @replace(/^\\s+/,'').split '=') \\\n\t\t\t.each (kv) -> if kv[0]?.length then ret[kv[0]] = kv[1] \\\n\t\t\t\t.replace(/^[\"']/,'') \\\n\t\t\t\t.replace(/['\"]$/,'')\n\t\tret\n\twatch = (name, func) ->\n\t\tprev = process.env[name]\n\t\t$.interval 1003, ->\n\t\t\tif (cur = process.env[name]) isnt prev\n\t\t\t\tfunc prev, cur\n\t\t\t\tprev = cur\n\tint = (name, def) -> parseInt(process.env[name] ? def, 10)\n\tfloat = (name, def) -> parseFloat(process.env[name] ? def)\n\t$: config: $.extend get, {get, set, parse, watch, int, float}\n$.plugin\n\tprovides: \"core,eq,each,map,filterMap,tap,replaceWith,reduce,union,intersect,distinct,\" +\n\t\t\"contains,count,coalesce,swap,shuffle,select,or,zap,clean,take,skip,first,last,slice,\" +\n\t\t\"push,filter,matches,weave,fold,flatten,call,apply,log,toArray,clear,indexWhere\"\n\tdepends: \"string,type\"\n, ->\n\t$.defineProperty $, \"now\",\n\t\tget: -> +new Date\n\tindex = (i, o) ->\n\t\ti += o.length while i < 0\n\t\tMath.min i, o.length\n\t\n\treturn {\n\t\t$:\n\t\t\tassert: (c, m=\"\") -> if not c then throw new Error(\"assertion failed: #{m}\")\n\t\t\tcoalesce: (a...) -> $(a).coalesce()\n\t\t\tkeysOf: (o, own=false) ->\n\t\t\t\tif own then $(k for own k of o)\n\t\t\t\telse $(k for k of o)\n\t\t\tvaluesOf: (o, own=false) ->\n\t\t\t\tif own then $(v for own k,v of o)\n\t\t\t\telse $(v for k,v of o)\n\t\teq: (i) -> $([@[index i, @]])\n\t\teach: (f) -> (f.call(t,t) for t in @); @\n\t\tmap: (f) ->\n\t\t\tb = $()\n\t\t\ti = 0\n\t\t\t(b[i++] = f.call t,t) for t in @\n\t\t\treturn b\n\t\tevery: (f) ->\n\t\t\tfor x in @ when not f.call x,x\n\t\t\t\treturn false\n\t\t\treturn true\n\t\tsome: (f) ->\n\t\t\tfor x in @ when f.call x,x\n\t\t\t\treturn true\n\t\t\treturn false\n\t\tfilterMap: (f) ->\n\t\t\tb = $()\n\t\t\tfor t in @\n\t\t\t\tv = f.call t,t\n\t\t\t\tif v?\n\t\t\t\t\tb.push v\n\t\t\tb\n\t\ttap: (f) -> f.call @, @\n\t\treplaceWith: (array) ->\n\t\t\t@clear()\n\t\t\t@push x for x in array\n\t\t\t@\n\t\treduce: (f, a) ->\n\t\t\tif (typeof a) is 'function'\n\t\t\t\t[f, a] = [a, f]\n\t\t\ti = 0; n = @length\n\t\t\ta = @[i++] if not a?\n\t\t\t(a = f.call @[x], a, @[x]) for x in [i...n] by 1\n\t\t\treturn a\n\t\tunion: (other, strict = true) ->\n\t\t\tret = $()\n\t\t\tret.push(x) for x in @ when not ret.contains(x, strict)\n\t\t\tret.push(x) for x in other when not ret.contains(x, strict)\n\t\t\tret\n\t\tdistinct: (strict = true) -> @union @, strict\n\t\tintersect: (other) -> $(x for x in @ when x in other) \n\t\tcontains: (item, strict = true) ->\n\t\t\tif strict\n\t\t\t\treturn @indexOf(item) > -1\n\t\t\telse for t in @ when `t == item`\n\t\t\t\treturn true\n\t\t\tfalse\n\t\tcount: (item, strict = true) ->\n\t\t\tn = 0\n\t\t\t++n for t in @ when (item is undefined) \\\n\t\t\t\tor (strict and t is item) \\\n\t\t\t\tor (not strict and `t == item`)\n\t\t\tn\n\t\tcoalesce: ->\n\t\t\tfor i in @\n\t\t\t\tif $.type.in 'array','bling', i then i = $(i).coalesce()\n\t\t\t\tif i? then return i\n\t\t\tnull\n\t\tswap: (i,j) ->\n\t\t\ti = index i, @\n\t\t\tj = index j, @\n\t\t\tif i isnt j\n\t\t\t\t[@[i],@[j]] = [@[j],@[i]]\n\t\t\t@\n\t\tshuffle: ->\n\t\t\ti = @length-1\n\t\t\twhile i >= 0\n\t\t\t\t@swap --i, Math.floor(Math.random() * i)\n\t\t\t@\n\t\tselect: do ->\n\t\t\tgetter = (prop) -> ->\n\t\t\t\tif $.is(\"function\",v = @[prop]) and prop isnt \"constructor\"\n\t\t\t\t\treturn $.bound(@,v)\n\t\t\t\telse v\n\t\t\tselectOne = (p) ->\n\t\t\t\tswitch type = $.type p\n\t\t\t\t\twhen 'regexp' then selectMany.call @, p\n\t\t\t\t\twhen 'string','number'\n\t\t\t\t\t\tp = String(p)\n\t\t\t\t\t\tif p is \"*\" then @flatten()\n\t\t\t\t\t\telse if (i = p.indexOf '.') > -1 then @select(p.substr 0,i).select(p.substr i+1)\n\t\t\t\t\t\telse @map(getter p)\n\t\t\t\t\telse $()\n\t\t\tselectMany = (a...) ->\n\t\t\t\tn = @length\n\t\t\t\tlists = Object.create(null)\n\t\t\t\tfor p in a\n\t\t\t\t\tif $.is 'regexp', p\n\t\t\t\t\t\tfor match in $.keysOf(@[0]).filter(p)\n\t\t\t\t\t\t\tlists[match] = @select(match)\n\t\t\t\t\telse lists[p] = @select(p)\n\t\t\t\ti = 0\n\t\t\t\t@map ->\n\t\t\t\t\tobj = Object.create(null)\n\t\t\t\t\tfor p of lists\n\t\t\t\t\t\tkey = p.split('.').pop()\n\t\t\t\t\t\tval = lists[p][i]\n\t\t\t\t\t\tunless val is undefined\n\t\t\t\t\t\t\tobj[key] = val\n\t\t\t\t\ti++\n\t\t\t\t\tobj\n\t\t\treturn ->\n\t\t\t\tswitch arguments.length\n\t\t\t\t\twhen 0 then @\n\t\t\t\t\twhen 1 then selectOne.apply @, arguments\n\t\t\t\t\telse selectMany.apply @, arguments\n\t\tor: (x) -> @[i] or= x for i in [0...@length]; @\n\t\tzap: (p, v) ->\n\t\t\tif $.is 'object', p\n\t\t\t\t@zap(k,v) for k,v of p\n\t\t\t\treturn @\n\t\t\ti = p.lastIndexOf \".\"\n\t\t\tif i > 0\n\t\t\t\thead = p.substr 0,i\n\t\t\t\ttail = p.substr i+1\n\t\t\t\t@select(head).zap tail, v\n\t\t\t\treturn @\n\t\t\tswitch $.type(v)\n\t\t\t\twhen \"array\",\"bling\" then @each -> @[p] = v[++i % v.length]\n\t\t\t\twhen \"function\" then @zap p, @select(p).map(v)\n\t\t\t\telse @each -> @[p] = v\n\t\t\t@\n\t\tclean: (props...) ->\n\t\t\t@each ->\n\t\t\t\tfor prop in props\n\t\t\t\t\tswitch $.type prop\n\t\t\t\t\t\twhen 'string','number' then delete @[prop]\n\t\t\t\t\t\twhen 'regexp'\n\t\t\t\t\t\t\tfor key in Object.keys(@) when prop.test key\n\t\t\t\t\t\t\t\tdelete @[key]\n\t\t\t\tnull\n\t\ttake: (n = 1) ->\n\t\t\tend = Math.min n, @length\n\t\t\t$( @[i] for i in [0...end] by 1 )\n\t\tskip: (n = 0) ->\n\t\t\tstart = Math.max 0, n|0\n\t\t\t$( @[i] for i in [start...@length] by 1 )\n\t\tfirst: (n = 1) -> if n is 1 then @[0] else @take(n)\n\t\tlast: (n = 1) -> if n is 1 then @[@length - 1] else @skip(@length - n)\n\t\tslice: (start=0, end=@length) ->\n\t\t\tstart = index start, @\n\t\t\tend = index end, @\n\t\t\t$( @[i] for i in [start...end] )\n\t\textend: (b) -> @.push(i) for i in b; @\n\t\tpush: (b) -> Array.prototype.push.call(@, b); @\n\t\tunshift: (b) -> Array.prototype.unshift.call(@, b); @\n\t\tfilter: (f, limit, positive) ->\n\t\t\tif $.is \"bool\", limit\n\t\t\t\t[positive, limit] = [limit, positive]\n\t\t\tif $.is \"number\", positive\n\t\t\t\t[limit, positive] = [positive, limit]\n\t\t\tlimit ?= @length\n\t\t\tpositive ?= true\n\t\t\tg = switch\n\t\t\t\twhen $.is \"object\", f then (x) -> $.matches f,x\n\t\t\t\twhen $.is \"string\", f then (x) -> x?.matchesSelector?(f) ? false\n\t\t\t\twhen $.is \"regexp\", f then (x) -> f.test(x)\n\t\t\t\twhen $.is \"function\", f then f\n\t\t\t\twhen $.type.in \"bool\",\"number\",\"null\",\"undefined\", f then (x) -> f is x\n\t\t\t\telse throw new Error \"unsupported argument to filter: #{$.type f}\"\n\t\t\ta = $()\n\t\t\tfor it in @\n\t\t\t\tif (!! g.call it,it) is positive\n\t\t\t\t\tif --limit < 0\n\t\t\t\t\t\tbreak\n\t\t\t\t\ta.push it\n\t\t\ta\n\t\tmatches: (expr) ->\n\t\t\tswitch\n\t\t\t\twhen $.is \"string\", expr then @select('matchesSelector').call(expr)\n\t\t\t\twhen $.is \"regexp\", expr then @map (x) -> expr.test x\n\t\t\t\telse throw new Error \"unsupported argument to matches: #{$.type expr}\"\n\t\tweave: (b) ->\n\t\t\tc = $()\n\t\t\tfor i in [@length-1..0] by -1\n\t\t\t\tc[(i*2)+1] = @[i]\n\t\t\tfor i in [0...b.length] by 1\n\t\t\t\tc[i*2] = b[i]\n\t\t\tc\n\t\tfold: (f) ->\n\t\t\tn = @length\n\t\t\tb = $( f.call @, @[i], @[i+1] for i in [0...n-1] by 2 )\n\t\t\tif (n%2) is 1\n\t\t\t\tb.push( f.call @, @[n-1], undefined )\n\t\t\tb\n\t\tflatten: ->\n\t\t\tb = $()\n\t\t\tfor item, i in @\n\t\t\t\tif $.type.in 'array','bling','arguments','nodelist', item\n\t\t\t\t\tfor j in item then b.push(j)\n\t\t\t\telse b.push(item)\n\t\t\tb\n\t\tcall: -> @apply(null, arguments)\n\t\tapply: (context, args) ->\n\t\t\t@filterMap ->\n\t\t\t\tif $.is \"function\", @ then @apply(context, args)\n\t\t\t\telse null\n\t\tlog: (label) ->\n\t\t\tif label\n\t\t\t\t$.log(label, @toString(), @length + \" items\")\n\t\t\telse\n\t\t\t\t$.log(@toString(), @length + \" items\")\n\t\t\t@\n\t\ttoArray: ->\n\t\t\t@__proto__ = Array.prototype\n\t\t\t@ \n\t\tclear: -> @splice 0, @length\n\t\tindexWhere: (f) ->\n\t\t\tfor x,i in @\n\t\t\t\treturn i if (f.call x,x)\n\t\t\treturn -1\n\t}\n$.plugin\n\tprovides: \"css,CSS\"\n\tdepends: \"type\"\n, ->\n\tflatten = (o, prefix, into) ->\n\t\tunless prefix of into\n\t\t\tinto[prefix] = []\n\t\tfor k,v of o\n\t\t\tswitch typeof v\n\t\t\t\twhen \"string\",\"number\"\n\t\t\t\t\tnk = k.replace(/([a-z]+)([A-Z]+)/g, \"$1-$2\").toLowerCase()\n\t\t\t\t\tinto[prefix].push \"#{nk}: #{v};\"\n\t\t\t\twhen \"object\"\n\t\t\t\t\tnk = if prefix then (prefix + k) else k\n\t\t\t\t\tflatten(v, nk, into)\n\t\t\t\telse throw new Error(\"unexpected type in css: #{typeof v}\")\n\t\treturn into\n\ttrim = (str) -> str.replace(/^\\s+/, '').replace(/\\s+$/, '')\n\tstripComments = (str) ->\n\t\twhile (i = str.indexOf \"/*\") > -1\n\t\t\tif (j = str.indexOf \"*/\", i) is -1\n\t\t\t\tbreak \n\t\t\tstr = str.substring(0,i) + str.substring(j+2)\n\t\tstr\n\tparse = (str, into) ->\n\t\tif m = str.match /([^{]+){/\n\t\t\tselector = trim m[1]\n\t\t\trest = str.substring m[0].length\n\t\t\tinto[selector] or= {}\n\t\t\tif m = rest.match /([^}]+)}/\n\t\t\t\tbody = m[1].split ';'\n\t\t\t\trest = rest.substring m[0].length\n\t\t\t\tfor rule in body\n\t\t\t\t\tcolon = rule.indexOf ':'\n\t\t\t\t\tcontinue unless key = rule.substring(0,colon)\n\t\t\t\t\tkey = trim key\n\t\t\t\t\tvalue = trim rule.substring(colon+1)\n\t\t\t\t\tinto[selector][key] = value\n\t\t\tif rest.length > 0\n\t\t\t\treturn parse(rest, into)\n\t\treturn into\n\tspecialOps = '>+~'\n\tcompact = (obj) ->\n\t\tret = {}\n\t\tfor selector, rules of obj\n\t\t\tfor op in specialOps\n\t\t\t\tselector = selector.replace op, \" #{op} \"\n\t\t\tparts = selector.split(/\\s+/)\n\t\t\tswitch parts.length\n\t\t\t\twhen 0 then continue\n\t\t\t\twhen 1 then $.extend (ret[selector] or= {}), rules\n\t\t\t\telse\n\t\t\t\t\tcur = ret\n\t\t\t\t\tfirst = true\n\t\t\t\t\tfor part in parts\n\t\t\t\t\t\tunless first then part = \" \" + part\n\t\t\t\t\t\tcur = cur[part] or= {}\n\t\t\t\t\t\tfirst = false\n\t\t\t\t\t$.extend cur, rules\n\t\tphaseTwo = (cur) ->\n\t\t\tmodified = false\n\t\t\tfor key, val of cur\n\t\t\t\tif $.is 'object', val\n\t\t\t\t\tsubkeys = Object.keys(val)\n\t\t\t\t\tswitch subkeys.length\n\t\t\t\t\t\twhen 0\n\t\t\t\t\t\t\tdelete cur[key]\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tif subkeys.length is 1 and $.is 'object', val[subkeys[0]]\n\t\t\t\t\t\t\t\tcur[key + subkeys[0]] = val[subkeys[0]] \n\t\t\t\t\t\t\t\tdelete cur[key] \n\t\t\t\t\t\t\t\tphaseTwo cur \n\t\t\t\t\tphaseTwo val\n\t\t\tcur\n\t\treturn phaseTwo ret\n\treturn {\n\t\t$:\n\t\t\tCSS:\n\t\t\t\tparse: (str, packed=false) ->\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tret = parse stripComments(str), {}\n\t\t\t\t\treturn if packed then compact ret else ret\n\t\t\t\tstringify: (obj) ->\n\t\t\t\t\treturn (\"#{x} { #{y.join ' '} }\" for x,y of flatten(obj, \"\", {}) when y.length > 0).join ' '\n\t}\n$.plugin\n\tprovides: 'date,midnight,stamp,unstamp,dateFormat,dateParse'\n\tdepends: 'type'\n, ->\n\t[ms,s,m,h,d] = [1,1000,1000*60,1000*60*60,1000*60*60*24]\n\tunits = {\n\t\tms, s, m, h, d,\n\t\tsec: s\n\t\tsecond: s\n\t\tseconds: s\n\t\tmin: m\n\t\tminute: m\n\t\tminutes: m\n\t\thr: h\n\t\thour: h\n\t\thours: h\n\t\tday: d\n\t\tdays: d\n\t}\n\tshortDays = [\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\",\"Sun\"]\n\tlongDays = [\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\",\"Sunday\"]\n\tformats =\n\t\tyyyy: Date.prototype.getUTCFullYear\n\t\tYY: fYY = -> String(@getUTCFullYear()).substr(2)\n\t\tyy: fYY\n\t\tmm: -> @getUTCMonth() + 1\n\t\tdd: Date.prototype.getUTCDate\n\t\tdw: Date.prototype.getUTCDay \n\t\tdW: -> shortDays[parseInt(@getUTCDay(), 10) - 1]\n\t\tDW: -> longDays[parseInt(@getUTCDay(), 10) - 1]\n\t\tHH: Date.prototype.getUTCHours\n\t\tMM: Date.prototype.getUTCMinutes\n\t\tSS: Date.prototype.getUTCSeconds\n\t\tMS: Date.prototype.getUTCMilliseconds\n\t\t_MS: -> $.padLeft Date.prototype.getUTCMilliseconds.apply(@), 3, \"0\"\n\tformat_keys = Object.keys(formats).sort().reverse()\n\tparsers =\n\t\tYYYY: pYYYY = Date.prototype.setUTCFullYear\n\t\tyyyy: pYYYY\n\t\tYY: pYY = (x) -> @setUTCFullYear (if x > 50 then 1900 else 2000) + x\n\t\tyy: pYY\n\t\tmm: (x) -> @setUTCMonth(x - 1)\n\t\tdd: Date.prototype.setUTCDate\n\t\tHH: Date.prototype.setUTCHours\n\t\tMM: Date.prototype.setUTCMinutes\n\t\tSS: Date.prototype.setUTCSeconds\n\t\t_MS: (s) -> @setUTCMilliseconds parseInt s, 10\n\t\tMS: Date.prototype.setUTCMilliseconds\n\tparser_keys = Object.keys(parsers).sort().reverse()\n\tfloor = Math.floor\n\t$.type.register \"date\",\n\t\tis: (o) -> $.isType Date, o\n\t\tarray: (o) -> [o]\n\t\tstring: (o, fmt, unit) -> $.date.format o, fmt, unit\n\t\tnumber: (o, unit) -> $.date.stamp o, unit\n\t$.type.extend 'string', date: (s, fmt = $.date.defaultFormat) -> new Date $.date.parse s, fmt, \"ms\"\n\t$.type.extend 'number', date: (n, unit = $.date.defaultUnit) -> $.date.unstamp n, unit\n\tadder = (key) ->\n\t\t(stamp, delta, stamp_unit = $.date.defaultUnit) ->\n\t\t\tdate = $.date.unstamp(stamp, stamp_unit)\n\t\t\tparsers[key].call date, (formats[key].call date) + delta\n\t\t\t$.date.stamp date, stamp_unit\n\t$:\n\t\tdate:\n\t\t\tdefaultUnit: \"s\"\n\t\t\tdefaultFormat: \"yyyy-mm-dd HH:MM:SS\"\n\t\t\tstamp: (date = new Date, unit = $.date.defaultUnit) ->\n\t\t\t\tfloor (date / units[unit])\n\t\t\tunstamp: (stamp, unit = $.date.defaultUnit) ->\n\t\t\t\tnew Date floor stamp * units[unit]\n\t\t\tconvert: (stamp, from = $.date.defaultUnit, to = $.date.defaultUnit) ->\n\t\t\t\tif $.is \"date\", stamp then stamp = $.date.stamp(stamp, from)\n\t\t\t\t(floor stamp * units[from] / units[to])\n\t\t\tmidnight: (stamp, unit = $.date.defaultUnit) ->\n\t\t\t\t$.date.convert ($.date.convert stamp, unit, \"d\"), \"d\", unit\n\t\t\tformat: (stamp, fmt = $.date.defaultFormat, unit = $.date.defaultUnit) ->\n\t\t\t\tif $.is \"date\", stamp then stamp = $.date.stamp(stamp, unit)\n\t\t\t\tdate = $.date.unstamp stamp, unit\n\t\t\t\tfor k in format_keys\n\t\t\t\t\tfmt = fmt.replace k, ($.padLeft \"\"+formats[k].call(date), k.length, \"0\")\n\t\t\t\tfmt\n\t\t\tparse: (dateString, fmt = $.date.defaultFormat, to = $.date.defaultUnit) ->\n\t\t\t\tdate = new Date(0)\n\t\t\t\ti = 0\n\t\t\t\twhile i < fmt.length\n\t\t\t\t\tfor k in parser_keys\n\t\t\t\t\t\tif fmt.indexOf(k, i) is i\n\t\t\t\t\t\t\ttry\n\t\t\t\t\t\t\t\tparsers[k].call date,\n\t\t\t\t\t\t\t\t\tparseInt dateString[i...i+k.length], 10\n\t\t\t\t\t\t\tcatch err\n\t\t\t\t\t\t\t\tthrow new Error(\"Invalid date ('#{dateString}') given format mask: #{fmt} (failed at position #{i})\")\n\t\t\t\t\t\t\ti += k.length - 1\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\ti += 1\n\t\t\t\t$.date.stamp date, to\n\t\t\taddMilliseconds: adder(\"MS\")\n\t\t\taddSeconds:      adder(\"SS\")\n\t\t\taddMinutes:      adder(\"MM\")\n\t\t\taddHours:        adder(\"HH\")\n\t\t\taddDays:         adder(\"dd\")\n\t\t\taddMonths:       adder(\"mm\")\n\t\t\taddYears:        adder(\"yyyy\")\n\t\t\trange: (from, to, interval=1, interval_unit=\"dd\", stamp_unit = $.date.defaultUnit) ->\n\t\t\t\tadd = adder(interval_unit)\n\t\t\t\tret = [from]\n\t\t\t\twhile (cur = ret[ret.length-1]) < to\n\t\t\t\t\tret.push add(cur, interval, stamp_unit)\n\t\t\t\tret\n\tmidnight: (unit = $.date.defaultUnit) -> @map(-> $.date.midnight @, unit)\n\tunstamp: (unit = $.date.defaultUnit) -> @map(-> $.date.unstamp @, unit)\n\tstamp: (unit = $.date.defaultUnit) -> @map(-> $.date.stamp @, unit)\n\tdateFormat: (fmt = $.date.defaultFormat, unit = $.date.defaultUnit) -> @map(-> $.date.format @, fmt, unit)\n\tdateParse: (fmt = $.date.defaultFormat, unit = $.date.defaultUnit) -> @map(-> $.date.parse @, fmt, unit)\n$.plugin\n\tprovides: \"debug, debugStack\",\n\tdepends: \"core\"\n, ->\n\texplodeStack = (stack, node_modules) ->\n\t\tnl = /(?:\\r\\n|\\r|\\n)/\n\t\tfs = null\n\t\ttry fs = require 'fs'\n\t\tcatch err then return stack \n\t\tlines = $(String(stack).split nl).filter(/^$/, false)\n\t\tunless node_modules\n\t\t\tlines = lines.filter(/node_modules/, false)\n\t\tmessage = lines.first()\n\t\tlines = lines.skip 1\n\t\tlines_cache = Object.create null\n\t\tfiles = lines.map (s) ->\n\t\t\tunless s? then return null\n\t\t\tf = s.replace(/^\\s*at\\s+/g,'') \\\n\t\t\t\t.replace(/.*\\(([^:]+:\\d+:\\d+)\\)$/, \"$1\")\n\t\t\ttry\n\t\t\t\t[f,ln_num,col] = f.split(/:/)\n\t\t\t\tf_lines = lines_cache[f] ?= String(fs.readFileSync f).split nl\n\t\t\t\tunless f_lines?\n\t\t\t\t\treturn null\n\t\t\t\tbefore = \"\"\n\t\t\t\tif ln_num > 1\n\t\t\t\t\tbefore = f_lines[ln_num-2]\n\t\t\t\t\tif before.length > 80\n\t\t\t\t\t\tbefore = \"..8<.. \" + before.substr(col-25,50) + \" ..>8..\"\n\t\t\t\tif ln_num >= f_lines.length\n\t\t\t\t\treturn null\n\t\t\t\tline = f_lines[ln_num-1]\n\t\t\t\tunless line?\n\t\t\t\t\treturn null\n\t\t\t\tif line.length > 80\n\t\t\t\t\tline = \"..8<..\" + line.substr(col-25,50) + \"..>8..\"\n\t\t\t\t\tcol = 31\n\t\t\t\ttabs = line.replace(/[^\\t]/g,'').length\n\t\t\t\tspacer = $.repeat('\\t', tabs) + $.repeat(' ', (col-1)-tabs)\n\t\t\t\treturn \"\"\"  #{ln_num-1} #{before}\\n  #{ln_num} #{line}\\n  #{ln_num} #{spacer}^\"\"\"\n\t\t\tcatch err\n\t\t\t\treturn null\n\t\treturn message + \"\\n\" + $.weave(files, lines).filter(null, false).join \"\\n\"\n\tprotoChain = (obj, arr) ->\n\t\treturn arr unless obj and obj.constructor\n\t\treturn protoChain obj.__proto__, arr.push obj.constructor\n\tdebugStack = (error, node_modules=false) ->\n\t\tstack = switch\n\t\t\twhen $.is 'error', error then String(error.stack)\n\t\t\twhen $.is 'string', error then error\n\t\t\telse String(error)\n\t\texplodeStack stack, node_modules\n\t$.type.extend { error: { string: debugStack } }\n\treturn $: { debugStack, protoChain: (o) -> protoChain(o.__proto__, $()) }\n$.plugin\n\tprovides: \"delay,immediate,interval\"\n\tdepends: \"is,select,extend,bound,core\"\n, ->\n\tu32 = (n) -> Math.min(Math.max(Math.abs(parseInt(n,10)), 1), 4294967295) \n\t$:\n\t\tdelay: do ->\n\t\t\ttimeoutQueue = $.extend [], do ->\n\t\t\t\tnext = (a) -> -> (do a.shift()) if a.length; null\n\t\t\t\tadd: (f, n) ->\n\t\t\t\t\t$.extend f,\n\t\t\t\t\t\torder: n + $.now\n\t\t\t\t\t\ttimeout: setTimeout next(@), n\n\t\t\t\t\tfor i in [0..@length] by 1\n\t\t\t\t\t\tif i is @length or @[i].order > f.order\n\t\t\t\t\t\t\t@splice i,0,f\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t@\n\t\t\t\tcancel: (f) ->\n\t\t\t\t\tif (i = @indexOf f) > -1\n\t\t\t\t\t\t@splice i, 1\n\t\t\t\t\t\tclearTimeout f.timeout\n\t\t\t\t\t@\n\t\t\t(n, f) -> switch\n\t\t\t\twhen $.is 'object', n\n\t\t\t\t\tb = $($.delay(k,v) for k,v of n)\n\t\t\t\t\t{\n\t\t\t\t\t\tcancel: -> b.select('cancel').call()\n\t\t\t\t\t\tunref: -> b.select('unref').call()\n\t\t\t\t\t\tref: -> b.select('ref').call()\n\t\t\t\t\t}\n\t\t\t\twhen $.is \"function\", f\n\t\t\t\t\ttimeoutQueue.add f, u32(n)\n\t\t\t\t\t{\n\t\t\t\t\t\tcancel: -> timeoutQueue.cancel(f)\n\t\t\t\t\t\tunref: (f) -> f.timeout?.unref()\n\t\t\t\t\t\tref: (f) -> f.timeout?.ref()\n\t\t\t\t\t}\n\t\t\t\telse throw new Error \"Bad arguments to $.delay (expected: int,function given: #{$.type n},#{$.type f})\"\n\t\timmediate: switch\n\t\t\twhen 'setImmediate' of $.global then $.global.setImmediate\n\t\t\twhen process?.nextTick? then process.nextTick\n\t\t\telse (f) -> setTimeout(f, 0)\n\t\tinterval: (n, f) ->\n\t\t\tpaused = false\n\t\t\tn = u32(n)\n\t\t\tret = $.delay n, g = ->\n\t\t\t\tunless paused then do f\n\t\t\t\t$.delay n, g\n\t\t\t$.extend ret,\n\t\t\t\tpause: (p=true) -> paused = p\n\t\t\t\tresume: (p=true) -> paused = not p\n\tdelay: (n, f) ->\n\t\t$.delay n, $.bound @, f\n\t\t@\n$.plugin\n\tdepends: \"inherit,reduce\"\n\tprovides: \"diff,stringDistance,stringDiff\"\n, ->\n\tlev_memo = Object.create null\n\tmin = Math.min\n\tlev = (s,i,n,t,j,m,dw,iw,sw) ->\n\t\treturn lev_memo[[s,i,n,t,j,m,dw,iw,sw]] ?= lev_memo[[t,j,m,s,i,n,dw,iw,sw]] ?= do -> switch\n\t\t\twhen m <= 0 then n\n\t\t\twhen n <= 0 then m\n\t\t\telse min(\n\t\t\t\tdw + lev(s,i+1,n-1, t,j,m,dw,iw,sw),\n\t\t\t\tiw + lev(s,i,n, t,j+1,m-1,dw,iw,sw),\n\t\t\t\t(sw * (s[i] isnt t[j])) + lev(s,i+1,n-1, t,j+1,m-1,dw,iw,sw)\n\t\t\t)\n\tcollapse = (ops) -> \n\t\t$.inherit {\n\t\t\ttoHTML: ->\n\t\t\t\t@reduce(((a,x) ->\n\t\t\t\t\ta += switch x.op\n\t\t\t\t\t\twhen 'ins' then \"<ins>#{x.v}</ins>\"\n\t\t\t\t\t\twhen 'del' then \"<del>#{x.v}</del>\"\n\t\t\t\t\t\twhen 'sub' then \"<del>#{x.v}</del><ins>#{x.w}</ins>\"\n\t\t\t\t\t\twhen 'sav' then x.v\n\t\t\t\t), \"\")\n\t\t}, ops.reduce(((a,x) ->\n\t\t\tif x.op is 'sub' and x.v is x.w \n\t\t\t\tx.op = 'sav'\n\t\t\t\tdelete x.w\n\t\t\tunless a.length\n\t\t\t\ta.push x\n\t\t\telse\n\t\t\t\tif (last = a.last()).op is x.op\n\t\t\t\t\tlast.v += x.v\n\t\t\t\t\tif last.op is 'sub'\n\t\t\t\t\t\tlast.w += x.w\n\t\t\t\telse\n\t\t\t\t\ta.push x\n\t\t\treturn a\n\t\t), $())\n\tdiff_memo = Object.create null\n\tdel = (c) -> {op:'del',v:c}\n\tins = (c) -> {op:'ins',v:c}\n\tsub = (c,d) -> {op:'sub',v:c,w:d}\n\tdiff = (s,i,n,t,j,m,dw,iw,sw) ->\n\t\treturn diff_memo[[s,i,n,t,j,m,dw,iw,sw]] ?= collapse do -> switch\n\t\t\twhen m <= 0 then (del c) for c in s.substr i,n\n\t\t\twhen n <= 0 then (ins c) for c in t.substr j,m\n\t\t\telse\n\t\t\t\tsw *= (s[i] isnt t[j])\n\t\t\t\targs =\n\t\t\t\t\tdel: [s+0,i+1,n-1,t+0,j+0,m+0,  1.00,1.50,1.50]\n\t\t\t\t\tins: [s+0,i+0,n+0,t+0,j+1,m-1,  1.50,1.00,1.50]\n\t\t\t\t\tsub: [s+0,i+1,n-1,t+0,j+1,m-1,  1.00,1.00,1.00]\n\t\t\t\tcosts =\n\t\t\t\t\tdel: dw + lev args.del...\n\t\t\t\t\tins: iw + lev args.ins...\n\t\t\t\t\tsub: sw + lev args.sub...\n\t\t\t\tswitch min costs.del, costs.ins, costs.sub\n\t\t\t\t\twhen costs.del then $(del s[i]).concat diff args.del...\n\t\t\t\t\twhen costs.ins then $(ins t[j]).concat diff args.ins...\n\t\t\t\t\twhen costs.sub then $(sub s[i],t[j]).concat diff args.sub...\n\t$:\n\t\tstringDistance: (s, t) -> lev s,0,s.length, t,0,t.length,1,1,1\n\t\tstringDiff: (s, t) -> diff s,0,s.length, t,0,t.length,1,1,1.5\nif $.global.document?\n\t$.plugin\n\t\tprovides: \"dom,HTML,html,append,appendText,appendTo,prepend,prependTo,\" +\n\t\t\t\"before,after,wrap,unwrap,replace,attr,data,addClass,removeClass,toggleClass,\" +\n\t\t\t\"hasClass,text,val,css,defaultCss,rect,width,height,top,left,bottom,right,\" +\n\t\t\t\"position,scrollToCenter,child,parents,next,prev,remove,find,querySelectorAll,\" +\n\t\t\t\"clone,toFragment\"\n\t\tdepends: \"function,type,string\"\n\t, ->\n\t\tbNodelistsAreSpecial = false\n\t\t$.type.register \"nodelist\",\n\t\t\tis:\t\t\t(o) -> o? and $.isType \"NodeList\", o\n\t\t\thash:\t\t(o) -> $($.hash(i) for i in o).sum()\n\t\t\tarray:\tdo ->\n\t\t\t\ttry \n\t\t\t\t\tdocument.querySelectorAll(\"xxx\").__proto__ = {}\n\t\t\t\t\treturn $.identity\n\t\t\t\tcatch err \n\t\t\t\t\tbNodelistsAreSpecial = true\n\t\t\t\t\treturn (o) -> (node for node in o)\n\t\t\tstring: (o) -> \"{Nodelist:[\"+$(o).select('nodeName').join(\",\")+\"]}\"\n\t\t\tnode:\t\t(o) -> $(o).toFragment()\n\t\t$.type.register \"node\",\n\t\t\tis:  (o) -> o?.nodeType > 0\n\t\t\thash:\t\t(o) -> $.checksum(o.nodeName) + $.hash(o.attributes) + $.checksum(o.innerHTML)\n\t\t\tstring: (o) -> o.toString()\n\t\t\tnode:\t\t$.identity\n\t\t$.type.register \"fragment\",\n\t\t\tis:  (o) -> o?.nodeType is 11\n\t\t\thash:\t\t(o) -> $($.hash(x) for x in o.childNodes).sum()\n\t\t\tstring: (o) -> o.toString()\n\t\t\tnode:\t\t$.identity\n\t\t$.type.register \"html\",\n\t\t\tis:  (o) -> typeof o is \"string\" and (s=o.trimLeft())[0] == \"<\" and s[s.length-1] == \">\"\n\t\t\tnode:\t\t(h) ->\n\t\t\t\t(node = document.createElement('div')).innerHTML = h\n\t\t\t\tif (n = (childNodes = node.childNodes).length) is 1\n\t\t\t\t\treturn node.removeChild(childNodes[0])\n\t\t\t\tdf = document.createDocumentFragment()\n\t\t\t\tdf.appendChild(node.removeChild(childNodes[0])) for i in [0...n] by 1\n\t\t\t\tdf\n\t\t\tarray:\t(o) -> $.type.lookup(h = $.HTML.parse o).array h\n\t\t\tstring: (o) -> \"'#{o}'\"\n\t\t\trepr:\t\t(o) -> '\"' + o + '\"'\n\t\t$.type.extend\n\t\t\tunknown:\t{ node: -> null }\n\t\t\tbling:\t\t{ node: (o) -> o.toFragment() }\n\t\t\tnode:\t\t\t{ html: (n) ->\n\t\t\t\td = document.createElement \"div\"\n\t\t\t\td.appendChild (n = n.cloneNode true)\n\t\t\t\tret = d.innerHTML\n\t\t\t\td.removeChild n \n\t\t\t\tret\n\t\t\t}\n\t\t\tstring:\n\t\t\t\tnode:  (o) -> $(o).toFragment()\n\t\t\t\tarray: do ->\n\t\t\t\t\tif bNodelistsAreSpecial\n\t\t\t\t\t\t(o) -> $.type.lookup(nl = document.querySelectorAll o).array(nl)\n\t\t\t\t\telse\n\t\t\t\t\t\t(o) -> document.querySelectorAll o\n\t\t\tfunction: { node: (o) -> $(o.toString()).toFragment() }\n\t\ttoFrag  = (a) ->\n\t\t\tunless a.parentNode\n\t\t\t\tdocument.createDocumentFragment().appendChild a\n\t\t\ta\n\t\tbefore  = (a,b) -> toFrag(a).parentNode.insertBefore b, a\n\t\tafter   = (a,b) -> toFrag(a).parentNode.insertBefore b, a.nextSibling\n\t\ttoNode  = (x) -> $.type.lookup(x).node x\n\t\tescaper = false\n\t\tparser  = false\n\t\t$.computeCSSProperty = (k) -> -> $.global.getComputedStyle(@, null).getPropertyValue k\n\t\tgetOrSetRect = (p) -> (x) -> if x? then @css(p, x) else @rect().select p\n\t\tselectChain = (prop) -> -> @map (p) -> $( p while p = p[prop] )\n\t\treturn {\n\t\t\t$:\n\t\t\t\tHTML:\n\t\t\t\t\tparse: (h) -> $.type.lookup(h).node h\n\t\t\t\t\tstringify: (n) -> $.type.lookup(n).html n\n\t\t\t\t\tescape: (h) ->\n\t\t\t\t\t\tescaper or= $(\"<div>&nbsp;</div>\").child 0\n\t\t\t\t\t\tret = escaper.zap('data', h).select(\"parentNode.innerHTML\").first()\n\t\t\t\t\t\tescaper.zap('data', '')\n\t\t\t\t\t\tret\n\t\t\thtml: (h) ->\n\t\t\t\treturn switch $.type h\n\t\t\t\t\twhen \"undefined\",\"null\" then @select 'innerHTML'\n\t\t\t\t\twhen \"string\",\"html\" then @zap 'innerHTML', h\n\t\t\t\t\twhen \"bling\" then @html h.toFragment()\n\t\t\t\t\twhen \"node\"\n\t\t\t\t\t\t@each -> \n\t\t\t\t\t\t\t@replaceChild @childNodes[0], h\n\t\t\t\t\t\t\twhile @childNodes.length > 1\n\t\t\t\t\t\t\t\t@removeChild @childNodes[1]\n\t\t\tappend: (x) -> \n\t\t\t\tx = toNode(x) \n\t\t\t\treturn unless x?\n\t\t\t\t@each (n) -> n?.appendChild? x.cloneNode true\n\t\t\tappendText: (text) ->\n\t\t\t\tx = document.createTextNode(text)\n\t\t\t\treturn unless x?\n\t\t\t\t@each (n) -> n?.appendChild? x.cloneNode true\n\t\t\tappendTo: (x) -> \n\t\t\t\tclones = @map( -> @cloneNode true)\n\t\t\t\ti = 0\n\t\t\t\t$(x).each -> @appendChild clones[i++]\n\t\t\t\tclones\n\t\t\tprepend: (x) -> \n\t\t\t\tif x?\n\t\t\t\t\tx = toNode x\n\t\t\t\t\t@take(1).each -> switch\n\t\t\t\t\t\twhen @childNodes.length > 0 then before @childNodes[0], x\n\t\t\t\t\t\telse @appendChild x\n\t\t\t\t\t@skip(1).each -> switch\n\t\t\t\t\t\twhen @childNodes.length then before @childNodes[0], x.cloneNode true\n\t\t\t\t\t\telse @appendChild x.cloneNode true\n\t\t\t\t@\n\t\t\tprependTo: (x) -> \n\t\t\t\tif x?\n\t\t\t\t\t$(x).prepend(@)\n\t\t\t\t@\n\t\t\tbefore: (x) -> \n\t\t\t\tif x?\n\t\t\t\t\tx = toNode x\n\t\t\t\t\t@take(1).each -> before @, x\n\t\t\t\t\t@skip(1).each -> before @, x.cloneNode true\n\t\t\t\t@\n\t\t\tafter: (x) -> \n\t\t\t\tif x?\n\t\t\t\t\tx = toNode x\n\t\t\t\t\t@take(1).each -> after @, x\n\t\t\t\t\t@skip(1).each -> after @, x.cloneNode true\n\t\t\t\t@\n\t\t\twrap: (parent) -> \n\t\t\t\tparent = toNode parent\n\t\t\t\tif $.is \"fragment\", parent\n\t\t\t\t\tthrow new Error(\"cannot call .wrap() with a fragment as the parent\")\n\t\t\t\t@each (child) ->\n\t\t\t\t\tif ($.is \"fragment\", child) or not child.parentNode\n\t\t\t\t\t\treturn parent.appendChild child\n\t\t\t\t\tgrandpa = child.parentNode\n\t\t\t\t\tmarker = document.createElement \"dummy\"\n\t\t\t\t\tparent.appendChild grandpa.replaceChild marker, child\n\t\t\t\t\tgrandpa.replaceChild parent, marker\n\t\t\tunwrap: -> \n\t\t\t\t@each ->\n\t\t\t\t\tif @parentNode and @parentNode.parentNode\n\t\t\t\t\t\t@parentNode.parentNode.replaceChild(@, @parentNode)\n\t\t\t\t\telse if @parentNode\n\t\t\t\t\t\t@parentNode.removeChild(@)\n\t\t\treplace: (n) -> \n\t\t\t\tif $.is 'regexp', n\n\t\t\t\t\tr = arguments[1]\n\t\t\t\t\treturn @map (s) -> s.replace(n, r)\n\t\t\t\tn = toNode n\n\t\t\t\tclones = @map(-> n.cloneNode true)\n\t\t\t\tfor i in [0...clones.length] by 1\n\t\t\t\t\t@[i].parentNode?.replaceChild clones[i], @[i]\n\t\t\t\tclones\n\t\t\tattr: (a,v) -> \n\t\t\t\tif $.is 'object', a\n\t\t\t\t\t@attr(k,v) for k,v of a\n\t\t\t\telse switch v\n\t\t\t\t\twhen undefined\n\t\t\t\t\t\treturn @select(\"getAttribute\").call(a, v)\n\t\t\t\t\twhen null\n\t\t\t\t\t\t@select(\"removeAttribute\").call(a, v)\n\t\t\t\t\telse\n\t\t\t\t\t\t@select(\"setAttribute\").call(a, v)\n\t\t\t\t@\n\t\t\tdata: (k, v) -> @attr \"data-#{$.dashize(k)}\", v\n\t\t\taddClass: (x) -> \n\t\t\t\tnotempty = (y) -> y isnt \"\"\n\t\t\t\t@removeClass(x).each ->\n\t\t\t\t\tc = @className.split(\" \").filter notempty\n\t\t\t\t\tc.push x\n\t\t\t\t\t@className = c.join \" \"\n\t\t\tremoveClass: (x) -> \n\t\t\t\tnotx = (y) -> y isnt x\n\t\t\t\t@each ->\n\t\t\t\t\t@className = @className.split(\" \").filter(notx).join(\" \")\n\t\t\t\t\tif @className.length is 0\n\t\t\t\t\t\t@removeAttribute('class')\n\t\t\ttoggleClass: (x) -> \n\t\t\t\tnotx = (y) -> y isnt x\n\t\t\t\t@each ->\n\t\t\t\t\tcls = @className.split(\" \")\n\t\t\t\t\tfilter = $.not $.isEmpty\n\t\t\t\t\tif (cls.indexOf x) > -1\n\t\t\t\t\t\tfilter = $.and notx, filter\n\t\t\t\t\telse\n\t\t\t\t\t\tcls.push x\n\t\t\t\t\t@className = cls.filter(filter).join(\" \")\n\t\t\t\t\tif @className.length is 0\n\t\t\t\t\t\t@removeAttribute 'class'\n\t\t\thasClass: (x) -> \n\t\t\t\t@select('className.split').call(\" \").select('indexOf').call(x).map (x) -> x > -1\n\t\t\ttext: (t) -> \n\t\t\t\treturn @zap('textContent', t) if t?\n\t\t\t\treturn @select('textContent')\n\t\t\tval: (v) -> \n\t\t\t\treturn @zap('value', v) if v?\n\t\t\t\treturn @select('value')\n\t\t\tcss: (key,v) ->\n\t\t\t\tif v? or $.is('object', key)\n\t\t\t\t\tsetters = @select 'style.setProperty'\n\t\t\t\t\tif $.is \"object\", key then setters.call k, v, \"\" for k,v of key\n\t\t\t\t\telse if $.is \"array\", v\n\t\t\t\t\t\tfor i in [0...n = Math.max v.length, nn = setters.length] by 1\n\t\t\t\t\t\t\tsetters[i%nn](key, v[i%n], \"\")\n\t\t\t\t\telse if $.is \"function\", v\n\t\t\t\t\t\tvalues = @select(\"style.#{key}\") \\\n\t\t\t\t\t\t\t.weave(@map $.computeCSSProperty key) \\\n\t\t\t\t\t\t\t.fold($.coalesce) \\\n\t\t\t\t\t\t\t.weave(setters) \\\n\t\t\t\t\t\t\t.fold (setter, value) -> setter(key, v.call value, value)\n\t\t\t\t\telse setters.call key, v, \"\"\n\t\t\t\t\treturn @\n\t\t\t\telse @select(\"style.#{key}\") \\\n\t\t\t\t\t.weave(@map $.computeCSSProperty key) \\\n\t\t\t\t\t.fold($.coalesce)\n\t\t\tdefaultCss: (k, v) ->\n\t\t\t\tsel = @selector\n\t\t\t\tstyle = \"\"\n\t\t\t\tif $.is \"string\", k\n\t\t\t\t\tif $.is \"string\", v\n\t\t\t\t\t\tstyle += \"#{sel} { #{k}: #{v} } \"\n\t\t\t\t\telse throw Error(\"defaultCss requires a value with a string key\")\n\t\t\t\telse if $.is \"object\", k\n\t\t\t\t\tstyle += \"#{sel} { \" +\n\t\t\t\t\t\t\"#{i}: #{k[i]}; \" for i of k +\n\t\t\t\t\t\"} \"\n\t\t\t\t$(\"<style></style>\").text(style).appendTo(\"head\")\n\t\t\t\t@\n\t\t\trect: -> @map (item) -> switch item\n\t\t\t\twhen window then {\n\t\t\t\t\twidth: window.innerWidth\n\t\t\t\t\theight: window.innerHeight\n\t\t\t\t\ttop: 0\n\t\t\t\t\tleft: 0\n\t\t\t\t\tright: window.innerWidth\n\t\t\t\t\tbottom: window.innerHeight\n\t\t\t\t}\n\t\t\t\telse item.getBoundingClientRect()\n\t\t\twidth: getOrSetRect(\"width\")\n\t\t\theight: getOrSetRect(\"height\")\n\t\t\ttop: getOrSetRect(\"top\")\n\t\t\tleft: getOrSetRect(\"left\")\n\t\t\tbottom: getOrSetRect(\"bottom\")\n\t\t\tright: getOrSetRect(\"right\")\n\t\t\tposition: (left, top) ->\n\t\t\t\tswitch\n\t\t\t\t\twhen not left? then @rect()\n\t\t\t\t\twhen not top? then @css(\"left\", $.px(left))\n\t\t\t\t\telse @css({top: $.px(top), left: $.px(left)})\n\t\t\tscrollToCenter: ->\n\t\t\t\tdocument.body.scrollTop = @[0].offsetTop - ($.global.innerHeight / 2)\n\t\t\t\t@\n\t\t\tchild: (n) -> @select('childNodes').map -> @[ if n < 0 then (n+@length) else n ]\n\t\t\tparents: selectChain('parentNode')\n\t\t\tprev: selectChain('previousSibling')\n\t\t\tnext: selectChain('nextSibling')\n\t\t\tremove: -> @each -> @parentNode?.removeChild(@)\n\t\t\tfind: (css, limit = 0) ->\n\t\t\t\t@filter(\"*\")\n\t\t\t\t\t.map(\n\t\t\t\t\t\tswitch limit\n\t\t\t\t\t\t\twhen 0 then (-> @querySelectorAll css)\n\t\t\t\t\t\t\twhen 1 then (-> $ @querySelector css)\n\t\t\t\t\t\t\telse (-> $(@querySelectorAll css).take(limit) )\n\t\t\t\t\t)\n\t\t\t\t\t.flatten()\n\t\t\tquerySelectorAll: (expr) ->\n\t\t\t\t@filter(\"*\")\n\t\t\t\t.reduce (a, i) ->\n\t\t\t\t\ta.extend i.querySelectorAll expr\n\t\t\t\t, $()\n\t\t\tclone: (deep=true, count=1) ->\n\t\t\t\tc = (n) -> if $.is \"node\", n then (n.cloneNode deep)\n\t\t\t\t@map -> switch count\n\t\t\t\t\twhen 1 then c @\n\t\t\t\t\telse (c(@) for _ in [0...count] by 1)\n\t\t\ttoFragment: ->\n\t\t\t\tif @length > 1\n\t\t\t\t\tdf = document.createDocumentFragment()\n\t\t\t\t\t(@map toNode).map (node) -> df.appendChild(node)\n\t\t\t\t\treturn df\n\t\t\t\treturn toNode @[0]\n\t\t}\n$.plugin\n\tprovides: \"EventEmitter\"\n\tdepends: \"type,hook\"\n, ->\n\t$: EventEmitter: $.init.append (obj) ->\n\t\tif obj in [$.global, null, undefined]\n\t\t\tif this in [$.global, $]\n\t\t\t\tobj = {}\n\t\t\telse obj = this\n\t\tlisteners = Object.create null\n\t\tlist = (e) -> (listeners[e] or= [])\n\t\treturn $.inherit {\n\t\t\temit:               (e, a...) -> (f.apply(@, a) for f in list(e)); @\n\t\t\ton: add = (e, f) ->\n\t\t\t\t('string' is typeof e) and \\\n\t\t\t\t\tlist(e).push(f)\n\t\t\t\t('object' is typeof e) and \\\n\t\t\t\t\t@addListener(k,v) for k,v of e\n\t\t\t\t@\n\t\t\taddListener: add\n\t\t\tremoveListener:     (e, f) -> (l.splice i, 1) if (i = (l = list e).indexOf f) > -1\n\t\t\tremoveAllListeners: (e) -> listeners[e] = []\n\t\t\tsetMaxListeners:        -> \n\t\t\tlisteners:          (e) -> list(e).slice 0\n\t\t}, obj\n$.plugin\n\tdepends: \"dom,function,core\"\n\tprovides: \"event,bind,unbind,trigger,delegate,undelegate,click,ready\"\n, ->\n\tEVENTSEP_RE = /,* +/\n\tevents = ['mousemove','mousedown','mouseup','mouseover','mouseout','blur','focus',\n\t\t'load','unload','reset','submit','keyup','keydown','keypress','change',\n\t\t'abort','cut','copy','paste','selection','drag','drop','orientationchange',\n\t\t'touchstart','touchmove','touchend','touchcancel',\n\t\t'gesturestart','gestureend','gesturecancel',\n\t\t'hashchange'\n\t]\n\tbinder = (e) -> (f) ->\n\t\tif $.is \"function\", f then @bind e, f\n\t\telse @trigger e, f\n\t_get = (self, keys...) ->\n\t\treturn if keys.length is 0 then self\n\t\telse _get (self[keys[0]] or= Object.create null), keys.slice(1)...\n\ttriggerReady = $.once ->\n\t\t$(document).trigger(\"ready\").unbind(\"ready\")\n\t\tdocument.removeEventListener?(\"DOMContentLoaded\", triggerReady, false)\n\t\t$.global.removeEventListener?(\"load\", triggerReady, false)\n\tdocument.addEventListener?(\"DOMContentLoaded\", triggerReady, false)\n\t$.global.addEventListener?(\"load\", triggerReady, false)\n\t_b = (funcName) -> (e, f) ->\n\t\tc = (e or \"\").split EVENTSEP_RE\n\t\t@each -> (@[funcName] i, f, true) for i in c\n\tret = {\n\t\tbind: _b \"addEventListener\"\n\t\tunbind: _b \"removeEventListener\"\n\t\ttrigger: (evt, args = {}) ->\n\t\t\targs = $.extend\n\t\t\t\tbubbles: true\n\t\t\t\tcancelable: true\n\t\t\t, args\n\t\t\tfor evt_i in (evt or \"\").split(EVENTSEP_RE)\n\t\t\t\tswitch evt_i\n\t\t\t\t\twhen \"click\", \"mousemove\", \"mousedown\", \"mouseup\", \"mouseover\", \"mouseout\" \n\t\t\t\t\t\te = document.createEvent \"MouseEvents\"\n\t\t\t\t\t\targs = $.extend\n\t\t\t\t\t\t\tdetail: 1,\n\t\t\t\t\t\t\tscreenX: 0,\n\t\t\t\t\t\t\tscreenY: 0,\n\t\t\t\t\t\t\tclientX: 0,\n\t\t\t\t\t\t\tclientY: 0,\n\t\t\t\t\t\t\tctrlKey: false,\n\t\t\t\t\t\t\taltKey: false,\n\t\t\t\t\t\t\tshiftKey: false,\n\t\t\t\t\t\t\tmetaKey: false,\n\t\t\t\t\t\t\tbutton: 0,\n\t\t\t\t\t\t\trelatedTarget: null\n\t\t\t\t\t\t, args\n\t\t\t\t\t\te.initMouseEvent evt_i, args.bubbles, args.cancelable, $.global, args.detail,\n\t\t\t\t\t\t\targs.screenX, args.screenY, args.clientX, args.clientY,\n\t\t\t\t\t\t\targs.ctrlKey, args.altKey, args.shiftKey, args.metaKey,\n\t\t\t\t\t\t\targs.button, args.relatedTarget\n\t\t\t\t\twhen \"blur\", \"focus\", \"reset\", \"submit\", \"abort\", \"change\", \"load\", \"unload\" \n\t\t\t\t\t\te = document.createEvent \"UIEvents\"\n\t\t\t\t\t\te.initUIEvent evt_i, args.bubbles, args.cancelable, $.global, 1\n\t\t\t\t\twhen \"touchstart\", \"touchmove\", \"touchend\", \"touchcancel\" \n\t\t\t\t\t\te = document.createEvent \"TouchEvents\"\n\t\t\t\t\t\targs = $.extend\n\t\t\t\t\t\t\tdetail: 1,\n\t\t\t\t\t\t\tscreenX: 0,\n\t\t\t\t\t\t\tscreenY: 0,\n\t\t\t\t\t\t\tclientX: 0,\n\t\t\t\t\t\t\tclientY: 0,\n\t\t\t\t\t\t\tctrlKey: false,\n\t\t\t\t\t\t\taltKey: false,\n\t\t\t\t\t\t\tshiftKey: false,\n\t\t\t\t\t\t\tmetaKey: false,\n\t\t\t\t\t\t\ttouches: [],\n\t\t\t\t\t\t\ttargetTouches: [],\n\t\t\t\t\t\t\tchangedTouches: [],\n\t\t\t\t\t\t\tscale: 1.0,\n\t\t\t\t\t\t\trotation: 0.0\n\t\t\t\t\t\t, args\n\t\t\t\t\t\te.initTouchEvent evt_i, args.bubbles, args.cancelable, $.global, args.detail,\n\t\t\t\t\t\t\targs.screenX, args.screenY, args.clientX, args.clientY,\n\t\t\t\t\t\t\targs.ctrlKey, args.altKey, args.shiftKey, args.metaKey,\n\t\t\t\t\t\t\targs.touches, args.targetTouches, args.changedTouches, args.scale, args.rotation\n\t\t\t\t\twhen \"gesturestart\", \"gestureend\", \"gesturecancel\" \n\t\t\t\t\t\te = document.createEvent \"GestureEvents\"\n\t\t\t\t\t\targs = $.extend {\n\t\t\t\t\t\t\tdetail: 1,\n\t\t\t\t\t\t\tscreenX: 0,\n\t\t\t\t\t\t\tscreenY: 0,\n\t\t\t\t\t\t\tclientX: 0,\n\t\t\t\t\t\t\tclientY: 0,\n\t\t\t\t\t\t\tctrlKey: false,\n\t\t\t\t\t\t\taltKey: false,\n\t\t\t\t\t\t\tshiftKey: false,\n\t\t\t\t\t\t\tmetaKey: false,\n\t\t\t\t\t\t\ttarget: null,\n\t\t\t\t\t\t\tscale: 1.0,\n\t\t\t\t\t\t\trotation: 0.0\n\t\t\t\t\t\t}, args\n\t\t\t\t\t\te.initGestureEvent evt_i, args.bubbles, args.cancelable, $.global,\n\t\t\t\t\t\t\targs.detail, args.screenX, args.screenY, args.clientX, args.clientY,\n\t\t\t\t\t\t\targs.ctrlKey, args.altKey, args.shiftKey, args.metaKey,\n\t\t\t\t\t\t\targs.target, args.scale, args.rotation\n\t\t\t\t\twhen  \"keydown\", \"keypress\", \"keyup\"\n\t\t\t\t\t\te = document.createEvent \"KeyboardEvents\"\n\t\t\t\t\t\targs = $.extend {\n\t\t\t\t\t\t\tview: null,\n\t\t\t\t\t\t\tctrlKey: false,\n\t\t\t\t\t\t\taltKey: false,\n\t\t\t\t\t\t\tshiftKey: false,\n\t\t\t\t\t\t\tmetaKey: false,\n\t\t\t\t\t\t\tkeyCode: 0,\n\t\t\t\t\t\t\tcharCode: 0\n\t\t\t\t\t\t}, args\n\t\t\t\t\t\te.initKeyboardEvent evt_i, args.bubbles, args.cancelable, $.global,\n\t\t\t\t\t\t\targs.ctrlKey, args.altKey, args.shiftKey, args.metaKey,\n\t\t\t\t\t\t\targs.keyCode, args.charCode\n\t\t\t\t\telse\n\t\t\t\t\t\te = document.createEvent \"Events\"\n\t\t\t\t\t\te.initEvent evt_i, args.bubbles, args.cancelable\n\t\t\t\t\t\te = $.extend e, args\n\t\t\t\tcontinue unless e\n\t\t\t\t@each ->\n\t\t\t\t\ttry @dispatchEvent e\n\t\t\t\t\tcatch err then $.log \"dispatchEvent error:\", err\n\t\t\t@\n\t\tdelegate: (selector, e, f) ->\n\t\t\th = (evt) -> \n\t\t\t\tif t = $(evt.target).parents()[0]?.unshift(evt.target).filter(selector)[0]\n\t\t\t\t\tf.call (evt.target = t), evt\n\t\t\tfor node in @bind(e, h) \n\t\t\t\t_get(node,'__delegates__',selector,e)[f] = h \n\t\t\t@\n\t\tundelegate: (selector, e, f) ->\n\t\t\tfor node in @\n\t\t\t\th = _get(node,'__delegates__',selector,e) \n\t\t\t\tif h and h[f]\n\t\t\t\t\t@unbind e, h[f] \n\t\t\t\t\tdelete h[f] \n\t\tclick: (f = {}) ->\n\t\t\tif @css(\"cursor\") in [\"auto\",\"\"]\n\t\t\t\t@css \"cursor\", \"pointer\"\n\t\t\tif $.is \"function\", f then @bind 'click', f\n\t\t\telse @trigger 'click', f\n\t\t\t@\n\t\tready: (f) ->\n\t\t\treturn (f.call @) if triggerReady.exhausted\n\t\t\t@bind \"ready\", f\n\t}\n\tevents.forEach (x) -> ret[x] = binder x\n\treturn ret\n$.plugin\n\tprovides: \"function,identity,compose,once,cycle,bound,partial\"\n\tdepends: \"extend,is,defineProperty,map\"\n, ->\n\t$:\n\t\tidentity: (o) -> o\n\t\tnot: (f) -> -> not f.apply @, arguments\n\t\tcompose: (f,g) -> (x) -> f.call(y, (y = g.call(x,x)))\n\t\tand: (f,g) -> (x) -> g.call(@,x) and f.call(@,x)\n\t\tonce: (f, n=1) ->\n\t\t\t$.defineProperty (-> (f.apply @,arguments) if n-- > 0),\n\t\t\t\t\"exhausted\",\n\t\t\t\t\tget: -> n <= 0\n\t\tcycle: (f...) ->\n\t\t\ti = -1\n\t\t\t-> f[i = ++i % f.length].apply @, arguments\n\t\tbound: (t, f, args = []) ->\n\t\t\treturn $.identity unless f?\n\t\t\tif $.is \"function\", f.bind\n\t\t\t\targs.splice 0, 0, t\n\t\t\t\tr = f.bind.apply f, args\n\t\t\telse\n\t\t\t\tr = (a...) -> f.apply t, (if args.length then args else a)\n\t\t\t$.extend r, { toString: -> \"bound-method of #{t}.#{f.name}\" }\n\t\tpartial: (f, a...) -> (b...) -> f a..., b...\n\tpartial: (a...) -> @map (f) -> $.partial f, a...\n$.plugin ->\n\tObject.assign (do -> yield).constructor.prototype, {\n\t\ttoArray: -> a = []; a.push(x) for x from this; a\n\t\tskip: (n) -> @next() while n-- > 0; @\n\t\tlimit: (n) ->\n\t\t\twhile n-- > 0\n\t\t\t\treturn if (next = @next()).done\n\t\t\t\tyield next.value\n\t\t\tnull\n\t\tmap: (f) ->\n\t\t\tyield f(x) for x from this\n\t\t\tnull\n\t\tfilter: (f, v=true) ->\n\t\t\tyield x for x from this when f(x) is v\n\t\t\tnull\n\t\tselect: (key) ->\n\t\t\tkey = key.split '.'\n\t\t\tyield select(x, key) for x from this\n\t\t\tnull\n\t}\n\tselect = (o, k) ->\n\t\to = o?[x] for x in k\n\t\to\n\treturn { }\n$.plugin\n\tprovides: \"hash\"\n\tdepends: \"type\"\n, ->\n\tmaxHash = 0xFFFFFFFF\n\tarray_hash = (d) -> (o) -> d + $($.hash(x) for x in o).reduce(((a,x) -> ((a*a)+(x|0))%maxHash), 1)\n\t$.type.extend\n\t\tunknown:   { hash: (o) -> $.checksum $.toString o }\n\t\tobject:    { hash: (o) -> 1970931729 + $($.hash(k) + $.hash(v) for k,v of o).sum() }\n\t\tarray:     { hash: array_hash(1816922041) }\n\t\targuments: { hash: array_hash(298517431) }\n\t\tbling:     { hash: array_hash(92078573) }\n\t\tbool:      { hash: (o) -> parseInt(1 if o) }\n\t\tregexp:    { hash: (o) -> 148243084 + $.checksum $.toString o }\n\treturn {\n\t\t$: { hash: (x) -> $.type.lookup(x).hash(x) }\n\t\thash: -> $.hash @\n\t}\n$.plugin ->\n\t$:\n\t\thistogram: (data, bucket_width=1, output_width=60) ->\n\t\t\tbuckets = $()\n\t\t\tlen = 0\n\t\t\tmin = Infinity\n\t\t\tmean = 0\n\t\t\tmax = 0\n\t\t\ttotal = 0\n\t\t\tfor x in data\n\t\t\t\tmin = Math.min x, min\n\t\t\t\tmax = Math.max x, max\n\t\t\t\ttotal += x\n\t\t\t\ti = Math.floor( x / bucket_width )\n\t\t\t\tif i of buckets\n\t\t\t\t\tbuckets[i] += 1\n\t\t\t\telse\n\t\t\t\t\tbuckets[i] = 1\n\t\t\t\tlen = Math.max(len, i+1)\n\t\t\tbuckets.length = len\n\t\t\tmean = total / data.length\n\t\t\tm = buckets.max()\n\t\t\tbuckets = buckets.or(0)\n\t\t\t\t.scale(1/m)\n\t\t\t\t.scale(output_width)\n\t\t\tsum = buckets.sum()\n\t\t\tret = \"\"\n\t\t\tpct_sum = 0\n\t\t\tfor n in [0...len] by 1\n\t\t\t\tend = (n+1) * bucket_width\n\t\t\t\tpct = (buckets[n]*100/sum)\n\t\t\t\tpct_sum += pct\n\t\t\t\tif pct_sum > 0\n\t\t\t\t\tret += $.padLeft(pct_sum.toFixed(2)+\"%\",7) +\n\t\t\t\t\t\t$.padRight(\" < #{end.toFixed(2)}\", 10) +\n\t\t\t\t\t\t\": \" + $.repeat(\"#\", buckets[n]) + \"\\n\"\n\t\t\tret + \"N: #{data.length} Min: #{min.toFixed(2)} Max: #{max.toFixed(2)} Mean: #{mean.toFixed(2)}\"\n\thistogram: -> $.histogram @\n$.plugin\n\tprovides: \"hook\"\n\tdepends: \"type\"\n, ->\n\t#\n\thook = ->\n\t\tchain = []\n\t\treturn $.extend ((args) ->\n\t\t\tfor func in chain\n\t\t\t\targs = func.call @, args\n\t\t\targs\n\t\t), {\n\t\t\tprepend: (o) -> chain.unshift o; o\n\t\t\tappend: (o) -> chain.push o; o\n\t\t}\n\t$.init = hook()\n\treturn $: { hook }\n$.plugin\n\tdepends: \"dom\"\n\tprovides: \"http\"\n, ->\n\tformencode = (obj) -> \n\t\treturn if $.is 'object', obj\n\t\t\to = JSON.parse JSON.stringify obj \n\t\t\t(\"#{i}=#{escape o[i]}\" for i of o).join \"&\"\n\t\telse obj\n\t$.type.register \"http\",\n\t\tis: (o) -> $.isType 'XMLHttpRequest', o\n\t\tarray: (o) -> [o]\n\treturn {\n\t\t$:\n\t\t\thttp: (url, opts = {}) ->\n\t\t\t\txhr = new XMLHttpRequest()\n\t\t\t\tresult = $.Promise()\n\t\t\t\tif $.is \"function\", opts\n\t\t\t\t\topts = success: $.bound(xhr, opts)\n\t\t\t\topts = $.extend {\n\t\t\t\t\tmethod: \"GET\"\n\t\t\t\t\tdata: null\n\t\t\t\t\tstate: $.identity \n\t\t\t\t\tsuccess: $.identity \n\t\t\t\t\terror: $.identity \n\t\t\t\t\tasync: true\n\t\t\t\t\tasBlob: false\n\t\t\t\t\ttimeout: 0 \n\t\t\t\t\tfollowRedirects: false\n\t\t\t\t\twithCredentials: false\n\t\t\t\t\theaders: {}\n\t\t\t\t}, opts\n\t\t\t\topts.state = $.bound(xhr, opts.state)\n\t\t\t\t_success = $.bound(xhr, opts.success)\n\t\t\t\t_error = $.bound(xhr, opts.error)\n\t\t\t\topts.success = (text) ->\n\t\t\t\t\tresult.resolve(text)\n\t\t\t\t\t_success(text)\n\t\t\t\topts.error = (err) ->\n\t\t\t\t\tresult.reject(err)\n\t\t\t\t\t_error(err)\n\t\t\t\tif opts.data and opts.method is \"GET\"\n\t\t\t\t\turl += \"?\" + formencode(opts.data)\n\t\t\t\telse if opts.data and opts.method is \"POST\"\n\t\t\t\t\topts.data = formencode(opts.data)\n\t\t\t\txhr.open(opts.method, url, opts.async)\n\t\t\t\txhr = $.extend xhr,\n\t\t\t\t\tasBlob: opts.asBlob\n\t\t\t\t\ttimeout: opts.timeout\n\t\t\t\t\tfollowRedirects: opts.followRedirects\n\t\t\t\t\twithCredentials: opts.withCredentials\n\t\t\t\t\tonreadystatechange: ->\n\t\t\t\t\t\topts.state?()\n\t\t\t\t\t\tif xhr.readyState is 4\n\t\t\t\t\t\t\tif xhr.status is 200\n\t\t\t\t\t\t\t\topts.success xhr.responseText\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\topts.error xhr.status, xhr.statusText\n\t\t\t\tfor k,v of opts.headers\n\t\t\t\t\txhr.setRequestHeader k, v\n\t\t\t\ttry xhr.addEventListener \"progress\", (evt) =>\n\t\t\t\t\t$.log(\"xhr progress event\", evt.loaded, evt.total)\n\t\t\t\t\tresult.emit('progress', evt.loaded, evt.total)\n\t\t\t\txhr.send opts.data\n\t\t\t\treturn $.extend result, cancel: -> xhr.cancel()\n\t\t\tpost: (url, opts = {}) ->\n\t\t\t\tif $.is(\"function\",opts)\n\t\t\t\t\topts = success: opts\n\t\t\t\topts.method = \"POST\"\n\t\t\t\t$.http(url, opts)\n\t\t\tget: (url, opts = {}) ->\n\t\t\t\tif( $.is(\"function\",opts) )\n\t\t\t\t\topts = success: opts\n\t\t\t\topts.method = \"GET\"\n\t\t\t\t$.http(url, opts)\n\t}\n$.depends 'hook', ->\n\t$.init.append (obj) ->\n\t\tmap = new Map()\n\t\tkeyMakers = []\n\t\t$.inherit {\n\t\t\tindex: (keyMaker) ->\n\t\t\t\tif keyMakers.indexOf(keyMaker) is -1\n\t\t\t\t\tkeyMakers.push keyMaker\n\t\t\t\t\tmap.set(keyMaker, new Map())\n\t\t\t\tfor x in @\n\t\t\t\t\tkey = keyMaker x\n\t\t\t\t\t_map = map.get keyMaker\n\t\t\t\t\tunless _map.has key\n\t\t\t\t\t\t_map.set key, $()\n\t\t\t\t\t_map.get(key).push x\n\t\t\t\t@\n\t\t\tquery: (criteria) ->\n\t\t\t\tfor keyMaker in keyMakers\n\t\t\t\t\t_map = map.get keyMaker\n\t\t\t\t\tif _map.has key = keyMaker criteria\n\t\t\t\t\t\tfor item in _map.get(key)\n\t\t\t\t\t\t\treturn if (yield item) is false\n\t\t\t\tnull\n\t\t\tqueryOne: (criteria) ->\n\t\t\t\t@query(criteria).next().value\n\t\t}, obj\n$.plugin\n\tprovides: \"toHTML\"\n\tdepends: \"type,synth,once\"\n, ->\n\tdumpStyles = $.once -> try $(\"head\").append $.synth(\"style#dump\").text \"\"\"\n\t\ttable.dump                { border: 1px solid black; }\n\t\ttable.dump tr.h           { background-color: blue; color: white; cursor: pointer; }\n\t\ttable.dump tr.h th        { padding: 0px 4px; }\n\t\ttable.dump tr.h.array     { background-color: purple; }\n\t\ttable.dump tr.h.bling     { background-color: gold; }\n\t\ttable.dump td             { padding: 2px; }\n\t\ttable.dump td.k           { background-color: lightblue; }\n\t\ttable.dump td.v.string    { background-color: #cfc; }\n\t\ttable.dump td.v.number    { background-color: #ffc; }\n\t\ttable.dump td.v.bool      { background-color: #fcf; }\n\t\"\"\"\n\tdumpScript = $.once -> try $(\"head\").append $.synth(\"script#dump\").text \"\"\"\n\t\t$(document.body).delegate('table.dump tr.h', 'click', function() {\n\t\t\t$(this.parentNode).find(\"tr.kv\").toggle()\n\t\t})\n\t\"\"\"\n\ttable = (t, rows) ->\n\t\ttab = $.synth \"table.dump tr.h.#{t} th[colspan=2] '#{t}'\"\n\t\tif t in [\"array\",\"bling\",\"nodelist\"]\n\t\t\ttab.find(\"th\").appendText \" [#{rows.length}]\"\n\t\ttab.append(row) for row in rows\n\t\ttab[0]\n\ttableRow = (k, v, open) ->\n\t\trow = $.synth \"tr.kv td.k[align=right][valign=top] '#{k}' + td.v\"\n\t\ttd = row.find \"td.v\"\n\t\tswitch _t = $.type v = $.toHTML v, open\n\t\t\twhen \"string\",\"number\",\"bool\",\"html\",\"null\",\"undefined\" then td.appendText String v\n\t\t\telse td.append v\n\t\ttd.addClass _t\n\t\trow.toggle() unless open\n\t\treturn row\n\treturn { $: {\n\t\ttoHTML: (obj, open=true) ->\n\t\t\tdo dumpStyles\n\t\t\tdo dumpScript\n\t\t\treturn switch t = $.type obj\n\t\t\t\twhen \"string\",\"number\",\"bool\",\"null\",\"undefined\",\"html\" then obj\n\t\t\t\twhen \"bling\",\"array\",\"nodelist\"\n\t\t\t\t\ttable(t, tableRow(k, v, open) for v,k in obj)\n\t\t\t\twhen \"object\",\"array\"\n\t\t\t\t\ttable(t, tableRow(k, v, open) for k,v of obj)\n\t\t\t\twhen \"node\"\n\t\t\t\t\ts = $.HTML.stringify obj\n\t\t\t\t\ts.substr(0, s.indexOf('>') + 1) + '...'\n\t\t\t\telse String(obj)\n\t} }\n$.plugin\n\tprovides: 'keyName,keyNames'\n\tdepends: \"math\"\n, ->\n\tkeyCode =\n\t\t\"Backspace\": 8\n\t\t\"BS\": 8\n\t\t\"Tab\": 9\n\t\t'\\t': 9\n\t\t\"Enter\": 13\n\t\t'\\n': 12\n\t\t\"Shift\": 16\n\t\t\"Ctrl\": 17\n\t\t\"Alt\": 18\n\t\t\"Pause\": 19\n\t\t\"Break\": 19\n\t\t\"Caps\": 20\n\t\t\"Caps Lock\": 20\n\t\t\"Esc\": 27\n\t\t\"Escape\": 27\n\t\t\"Space\": 32\n\t\t\" \": 32\n\t\t\"PgUp\": 33\n\t\t\"Page Up\": 33\n\t\t\"PgDn\": 34\n\t\t\"End\": 35\n\t\t\"Home\": 36\n\t\t\"Left\": 37\n\t\t\"Up\": 38\n\t\t\"Right\": 39\n\t\t\"Down\": 40\n\t\t\"Insert\": 45\n\t\t\"Del\": 46\n\t\t\"Delete\": 46\n\t\t\"Times\": 106\n\t\t\"*\": 106\n\t\t\"Plus\": 107\n\t\t\"+\": 107\n\t\t\"Minus\": 109\n\t\t\"-\": 109\n\t\t\"Div\": 111\n\t\t\"Divide\": 111\n\t\t\"/\": 111\n\t\t\"Semi-Colon\": 186\n\t\t\";\": 187\n\t\t\"Equal\": 187\n\t\t\"=\": 187\n\t\t\"Comma\": 188\n\t\t\",\": 188\n\t\t\"Dash\": 189\n\t\t\"-\": 189\n\t\t\"Dot\": 190\n\t\t\"Period\": 190\n\t\t\".\": 190\n\t\t\"Forward Slash\": 191\n\t\t\"/\": 191\n\t\t\"Back Slash\": 220\n\t\t\"\\\\\": 220\n\t\t\"Single Quote\": 222\n\t\t\"'\": 222\n\tfor a in \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n\t\tkeyCode[a] = keyCode[a.toLowerCase()] = a.charCodeAt(0)\n\tfor a in $.range(1,13)\n\t\tkeyCode[\"F\"+a] = keyCode[\"f\"+a] = 111 + a\n\tkeyName = {}\n\tfor name, code of keyCode\n\t\tkeyName[code] or= name\n\treturn $:\n\t\tkeyCode: (name) -> keyCode[name] ? name\n\t\tkeyName: (code) -> keyName[code] ? code\n$.plugin\n\tdepends: \"dom,promise\"\n\tprovides: \"lazy\"\n, ->\n\tlazy_load = (elementName, props) ->\n\t\tret = $.Promise()\n\t\tdocument.head.appendChild elem = $.extend document.createElement(elementName), props,\n\t\t\tonload: -> ret.resolve elem\n\t\t\tonerror: -> ret.reject.apply ret, arguments\n\t\tret\n\t$:\n\t\tscript: (src) ->\n\t\t\tlazy_load \"script\", { src: src }\n\t\tstyle: (src) ->\n\t\t\tlazy_load \"link\", { href: src, rel: \"stylesheet\" }\n$.plugin {\n\tprovides: \"log, logger\"\n\tdepends: \"bound\"\n}, ->\n\tts = { \n\t\tms: \"\" \n\t\tSS: \"\" \n\t\tMM: \"\"\n\t\tHH: \"\"\n\t\tdd: \"\"\n\t\tmm: \"\"\n\t\tyyyy: \"\"\n\t}\n\tprior_date = 0\n\tget_date_prefix = ->\n\t\td = new Date()\n\t\tdelta = d - prior_date\n\t\tprior_date = d\n\t\tif (ts.ms isnt ms = $.padLeft(d.getUTCMilliseconds(), 3, \"0\")) or (delta % 1000) is 0\n\t\t\tts.ms = ms\n\t\t\tif ts.SS isnt sec = $.padLeft d.getUTCSeconds(), 2, \"0\" or (delta % 60000) is 0\n\t\t\t\tts.SS = sec\n\t\t\t\tif ts.MM isnt min = $.padLeft d.getUTCMinutes(), 2, \"0\" or (delta % 3600000) is 0\n\t\t\t\t\tts.MM = min\n\t\t\t\t\tif ts.HH isnt hr = $.padLeft String(d.getUTCHours()), 2, \"0\" or (delta % 86400000) is 0\n\t\t\t\t\t\tts.HH = hr\n\t\t\t\t\t\tif ts.dd isnt day = $.padLeft String(d.getUTCDate()), 2, \"0\" or (delta > 86400000)\n\t\t\t\t\t\t\tts.dd = day\n\t\t\t\t\t\t\tif ts.mm isnt mon = $.padLeft String(d.getUTCMonth() + 1), 2, \"0\"\n\t\t\t\t\t\t\t\tts.mm = mon\n\t\t\t\t\t\t\t\tts.yyyy = String d.getUTCFullYear()\n\t\t\"#{ts.yyyy}-#{ts.mm}-#{ts.dd} #{ts.HH}:#{ts.MM}:#{ts.SS}.#{ts.ms}\"\n\tlog = (a...) ->\n\t\tif a.length\n\t\t\tp = log.pre()\n\t\t\tbuf = []\n\t\t\tfor x,i in a\n\t\t\t\tx = $.toString x\n\t\t\t\tif -1 is x.indexOf '\\n' then buf.push x\n\t\t\t\telse x.split('\\n').forEach (y) ->\n\t\t\t\t\tif y?.length > 0\n\t\t\t\t\t\tbuf.push y\n\t\t\t\t\t\tif p then buf.unshift p\n\t\t\t\t\t\tlog.out buf...\n\t\t\t\t\t\tbuf = []\n\t\t\tif buf.length > 0\n\t\t\t\tif p then buf.unshift p\n\t\t\t\tlog.out buf...\n\t\t\treturn a[a.length-1]\n\t\tnull\n\t$.defineProperty log, \"out\", { configurable: false, writable: true }\n\tlog.out = console.log.bind console\n\tprefixers = [\n\t\t-> null\n\t\t-> String(+new Date())\n\t\tget_date_prefix\n\t]\n\tdo log.disableTimestamps = -> log.pre = prefixers[0]\n\tlog.enableTimestamps = (level=2) -> log.pre = prefixers[level] ? prefixers[0]\n\treturn $: {\n\t\tlog: log\n\t\tlogger: (prefix) -> (a...) -> log prefix, a...\n\t}\n$.plugin\n\tprovides: \"matches\"\n\tdepends: \"function,core,string\"\n, ->\n\tIsEqual = (p, o, t) -> (o is p)\n\tContains = (p, a, t) ->\n\t\tfor v in a when (matches p, v, t) then return true\n\t\treturn false\n\tContainsValue = (p, o, t) ->\n\t\tfor k,v of o when (matches p, v, t) then return true\n\t\treturn false\n\tObjMatch = (p, o, t) -> \n\t\tfor k,v of p when not (matches v, o[k]) then return false\n\t\treturn true\n\tArrayMatch = (p, o, t) ->\n\t\tfor v,i in p when not (matches v, o[i]) then return false\n\t\treturn true\n\tRegExpMatch = (p, s, t) -> p.test String(s)\n\tbehaviors = {\n\t\t\"function\": [\n\t\t\t['array', 'bling', Contains]\n\t\t\t['object', ContainsValue]\n\t\t]\n\t\tregexp: [\n\t\t\t['string','number', RegExpMatch ]\n\t\t\t['array','bling', Contains ]\n\t\t\t['object', ContainsValue ]\n\t\t]\n\t\tobject: [\n\t\t\t['array','bling', Contains ]\n\t\t\t['object', ObjMatch ]\n\t\t]\n\t\tarray: [\n\t\t\t['array','bling', ArrayMatch ]\n\t\t]\n\t\tnumber: [\n\t\t\t['number', IsEqual ]\n\t\t\t['array','bling', Contains ]\n\t\t]\n\t\tstring: [\n\t\t\t['string', IsEqual ]\n\t\t\t['array','bling', Contains ]\n\t\t]\n\t}\n\tfor pt,v of behaviors\n\t\tmatches = { }\n\t\tfor list in v\n\t\t\tf = list.pop()\n\t\t\tfor obj_type in list\n\t\t\t\tmatches[obj_type] = f\n\t\t$.type.extend pt, { matches }\n\tspecialPatterns = {\n\t\t$any: -> true\n\t\t$type:  (p, o, t) -> $.is p.$type, o\n\t\t$class: (p, o, t) -> $.isType p.$class, o\n\t\t$lt:    (p, o, t) -> o < p.$lt\n\t\t$gt:    (p, o, t) -> o > p.$gt\n\t\t$lte:   (p, o, t) -> o <= p.$lte\n\t\t$gte:   (p, o, t) -> o >= p.$gte\n\t\t$ne:    (p, o, t) -> o != p.$ne\n\t}\n\tmatches = (pattern, obj, pt = $.type.lookup pattern) ->\n\t\tif pt.name is 'object'\n\t\t\tfor k, f of specialPatterns\n\t\t\t\tif k of pattern\n\t\t\t\t\treturn f pattern, obj, pt\n\t\tfor type, f of pt.matches\n\t\t\tcontinue if type is 'else'\n\t\t\tif $.is type, obj\n\t\t\t\treturn f pattern, obj, pt\n\t\treturn pt.matches?.else?(pattern, obj, pt) ? IsEqual pattern, obj, pt\n\tmatches.Any = { $any: true }\n\tmatches.Type = (type) -> { $type: type }\n\tmatches.Class = (klass) -> { $class: klass }\n\treturn $: matches: matches\n$.plugin\n\tprovides: \"math\"\n\tdepends: \"core\"\n, ->\n\t$.type.extend\n\t\tbool: { number: (o) -> if o then 1 else 0 }\n\t\tnumber: { bool: (o) -> not not o }\n\t_By = (cmp) ->\n\t\t(field) ->\n\t\t\tvalueOf = switch\n\t\t\t\twhen $.is \"string\", field then (o) -> o[field]\n\t\t\t\twhen $.is \"function\", field then field\n\t\t\t\telse throw new Error \".maxBy first argument should be a string or function\"\n\t\t\tx = @first()\n\t\t\t@skip(1).each (n) ->\n\t\t\t\tif cmp valueOf(n), valueOf(x)\n\t\t\t\t\tx = n\n\t\t\tx\n\t$:\n\t\trange: (start, end, step = 1) ->\n\t\t\tif not end? then (end = start; start = 0)\n\t\t\tstep *= -1 if end < start and step > 0 \n\t\t\t$( (start + (i*step)) for i in [0...Math.ceil( (end - start) / step )] )\n\t\tzeros: (n, z = 0) -> $( z for i in [0...n] )\n\t\tones: (n) -> $( 1 for i in [0...n] )\n\t\tdeg2rad: (n) -> n * Math.PI / 180\n\t\trad2deg: (n) -> n * 180 / Math.PI\n\tfloats: -> @map parseFloat\n\tints: -> @map -> parseInt @, 10\n\tpx: (delta) -> @ints().map -> $.px @,delta\n\tmin: -> @filter( isFinite ).reduce Math.min\n\tmax: -> @filter( isFinite ).reduce Math.max\n\tmaxBy: _By (a,b) -> a > b\n\tminBy: _By (a,b) -> a < b\n\tmean: mean = -> if not @length then 0 else @sum() / @length\n\tavg: mean\n\tsum: ->\n\t\tn = 0\n\t\tn += x for x in @ when x? and isFinite(x)\n\t\tn\n\tproduct: -> @filter( isFinite ).reduce (a) -> a * @\n\tsquares: -> @pow(2)\n\tpow: (n) -> @map -> Math.pow @, n\n\tmagnitude: -> Math.sqrt @floats().squares().sum()\n\tscale: (r) -> @map -> r * @\n\tadd: add = (d) -> switch $.type(d)\n\t\twhen \"number\" then @map -> d + @\n\t\twhen \"bling\",\"array\" then $( @[i]+d[i] for i in [0...Math.min(@length,d.length)] )\n\tplus: add\n\tsub: sub = (d) -> switch $.type d\n\t\twhen \"number\" then @map -> @ - d\n\t\twhen \"bling\",\"array\" then $( @[i]-d[i] for i in [0...Math.min @length, d.length])\n\tminus: sub\n\tdot: (b) ->\n\t\t$.sum( @[i]*b[i] for i in [0...Math.min(@length,b.length)] )\n\tangle: (b) -> Math.acos (@dot(b) / (@magnitude() * b.magnitude()))\n\tcross: (b) ->\n\t\t$ @[1]*b[2] - @[2]*b[1],\n\t\t\t@[2]*b[0] - @[0]*b[2],\n\t\t\t@[0]*b[1] - @[1]*b[0]\n\tnormalize: -> @scale 1 / @magnitude()\n\tdeg2rad: -> @filter( isFinite ).map -> @ * Math.PI / 180\n\trad2deg: -> @filter( isFinite ).map -> @ * 180 / Math.PI\n#\n$.plugin\n\tdepends: \"function,hash\"\n\tprovides: 'memoize'\n, ->\n\tplainCache = ->\n\t\tdata = {}\n\t\treturn {\n\t\t\thas: (k) -> k of data\n\t\t\tget: (k) -> data[k]\n\t\t\tset: (k,v) -> data[k] = v\n\t\t}\n\t$:\n\t\tmemoize: (opts) ->\n\t\t\tif $.is \"function\", opts\n\t\t\t\topts = f: opts\n\t\t\tif not $.is 'object', opts\n\t\t\t\tthrow new Error \"Argument Error: memoize requires either a function or object as first argument\"\n\t\t\topts.cache or= plainCache()\n\t\t\topts.hash or= $.hash\n\t\t\treturn ->\n\t\t\t\tkey = opts.hash arguments\n\t\t\t\tif opts.cache.has key then opts.cache.get key\n\t\t\t\telse opts.cache.set key, opts.f.apply @, arguments\n$.plugin\n\tprovides: 'middleware',\n\tdepends: 'type'\n, ->\n\t$: middleware: (s = []) -> \n\t\te = $() \n\t\t{\n\t\t\tcatch:  (f)   -> e.push f; @\n\t\t\tuse:    (f)    -> s.push f                                  ; @\n\t\t\tunuse:  (f)    -> s.splice i, 1 while (i = s.indexOf f) > -1; @\n\t\t\tinvoke: (a...) -> \n\t\t\t\ti = -1\n\t\t\t\tdo next = (=> try (s[++i] a..., next) catch _e then e.call _e)\n\t\t\t\t@\n\t\t}\n$.plugin\n\tdepends: \"core,function\"\n\tprovides: \"promise\"\n, ->\n\tclass NoValue \n\tPromise = (obj) ->\n\t\tif obj in [$.global, null, undefined]\n\t\t\tif this is $\n\t\t\t\tobj = {}\n\t\t\telse\n\t\t\t\tobj = this\n\t\twaiting = []\n\t\terr = result = NoValue\n\t\tconsume_all = (e, v) ->\n\t\t\twhile w = waiting.shift()\n\t\t\t\tconsume_one w, e, v\n\t\t\tnull\n\t\tconsume_one = (cb, e, v) ->\n\t\t\tcb.timeout?.cancel()\n\t\t\ttry cb e, v\n\t\t\tcatch _e\n\t\t\t\t_stack = $.debugStack _e\n\t\t\t\t$.log \"Promise(#{ret.promiseId}) first-chance exception:\", _stack\n\t\t\t\ttry cb _e, null\n\t\t\t\tcatch __e\n\t\t\t\t\t__stack = $.debugStack __e\n\t\t\t\t\t$.log \"Promise(#{ret.promiseId}) last-chance exception:\", __stack\n\t\t\tnull\n\t\tend = (error, value) =>\n\t\t\tif err is result is NoValue\n\t\t\t\tif error isnt NoValue\n\t\t\t\t\terr = error\n\t\t\t\t\tunless error?.stack \n\t\t\t\t\t\terr = new Error error\n\t\t\t\telse if value isnt NoValue\n\t\t\t\t\tresult = value\n\t\t\t\tswitch true\n\t\t\t\t\twhen value is @\n\t\t\t\t\t\treturn end new TypeError \"cant resolve a promise with itself\"\n\t\t\t\t\twhen value? and value.then and value.catch \n\t\t\t\t\t\tvalue.then (x) -> end null, x\n\t\t\t\t\t\tvalue.catch (e) -> end e, null\n\t\t\t\t\twhen $.is 'promise', value then value.wait end \n\t\t\t\t\twhen error isnt NoValue then consume_all err, null\n\t\t\t\t\twhen value isnt NoValue then consume_all null, result\n\t\t\treturn @\n\t\tret = $.inherit {\n\t\t\tpromiseId: $.random.string 6\n\t\t\twait: (timeout, cb) -> \n\t\t\t\tif $.is \"function\", timeout\n\t\t\t\t\t[cb, timeout] = [timeout, Infinity]\n\t\t\t\tif err isnt NoValue\n\t\t\t\t\tconsume_one cb, err, null\n\t\t\t\telse if result isnt NoValue\n\t\t\t\t\tconsume_one cb, null, result\n\t\t\t\telse \n\t\t\t\t\twaiting.push cb \n\t\t\t\t\tif isFinite(timeout = parseFloat timeout) and timeout > 0\n\t\t\t\t\t\tcb.timeout = $.delay timeout, ->\n\t\t\t\t\t\t\tif (i = waiting.indexOf cb) > -1\n\t\t\t\t\t\t\t\twaiting.splice i, 1\n\t\t\t\t\t\t\t\tconsume_one cb, (err = new Error 'timeout'), undefined\n\t\t\t\t@\n\t\t\tthen: (f, e) -> @wait (err, x) ->\n\t\t\t\tif err then e?(err)\n\t\t\t\telse f(x)\n\t\t\tfinish:  (value) -> end NoValue, value; @\n\t\t\tresolve: (value) -> end NoValue, value; @\n\t\t\tfail:    (error) -> end error, NoValue; @\n\t\t\treject:  (error) -> end error, NoValue; @\n\t\t\treset:  -> \n\t\t\t\terr = result = NoValue; @\n\t\t\thandler: (err, data) ->\n\t\t\t\tif err then ret.reject(err) else ret.resolve(data)\n\t\t\tinspect: -> \"{Promise[#{@promiseId}] #{getState()}}\"\n\t\t\ttoString: -> \"{Promise[#{@promiseId}] #{getState()}}\"\n\t\t}, $.EventEmitter(obj)\n\t\tgetState = -> switch\n\t\t\twhen result isnt NoValue then \"resolved\"\n\t\t\twhen err isnt NoValue then \"rejected\"\n\t\t\telse \"pending\"\n\t\tisFinished = -> result isnt NoValue\n\t\t$.defineProperty ret, 'finished', get: isFinished\n\t\t$.defineProperty ret, 'resolved', get: isFinished\n\t\tisFailed = -> err isnt NoValue\n\t\t$.defineProperty ret, 'failed',   get: isFailed\n\t\t$.defineProperty ret, 'rejected', get: isFailed\n\t\treturn ret\n\tPromise.compose = Promise.parallel = (promises...) ->\n\t\tpromises = $(promises).flatten()\n\t\tp = $.Progress(1 + promises.length)\n\t\t$(promises).select('wait').call (err) ->\n\t\t\tif err then p.reject(err) else p.resolve 1\n\t\tp.resolve 1\n\tPromise.collect = (promises) ->\n\t\tret = []\n\t\tp = $.Promise()\n\t\tunless promises? then return p.resolve(ret)\n\t\tq = $.Progress(1 + promises.length)\n\t\tfor promise, i in promises then do (i) ->\n\t\t\tpromise.wait (err, result) ->\n\t\t\t\tif err then q.reject(err) \n\t\t\t\telse q.resolve 1, ret[i] = result \n\t\tq.then (->p.resolve ret), p.reject\n\t\tq.resolve(1)\n\t\tp\n\tPromise.wrapCall = (f, args...) ->\n\t\tp = $.Promise()\n\t\tf args..., (e, r) ->\n\t\t\tif e then p.reject(e) else p.resolve(r)\n\t\treturn p\n\tProgress = (max = 1.0) ->\n\t\tcur = 0.0\n\t\treturn ret = $.inherit {\n\t\t\tprogress: (args...) ->\n\t\t\t\treturn cur unless args.length\n\t\t\t\tcur = args[0] ? cur\n\t\t\t\tmax = (args[1] ? max) if args.length > 1\n\t\t\t\titem = if args.length > 2 then args[2] else cur\n\t\t\t\tif cur >= max\n\t\t\t\t\tret.__proto__.__proto__.resolve(item)\n\t\t\t\tret.emit 'progress', cur, max, item\n\t\t\t\t@\n\t\t\tresolve: (delta, item = delta) ->\n\t\t\t\tunless isFinite(delta) then delta = 1\n\t\t\t\tret.progress cur + delta, max, item\n\t\t\tfinish: (delta, item) -> ret.resolve delta, item\n\t\t\tinclude: (promise) ->\n\t\t\t\tif $.is 'promise', promise\n\t\t\t\t\tret.progress cur, max + 1\n\t\t\t\t\tpromise.wait (err, data) ->\n\t\t\t\t\t\tif err then ret.reject err\n\t\t\t\t\t\telse ret.resolve data\n\t\t\t\t@\n\t\t\tinspect: -> \"{Progress[#{ret.promiseId}] #{cur}/#{max}}\"\n\t\t}, Promise()\n\tPromise.xhr = (xhr) ->\n\t\tp = $.Promise()\n\t\txhr.onreadystatechange = ->\n\t\t\tif @readyState is @DONE\n\t\t\t\tif @status is 200\n\t\t\t\t\tp.resolve xhr.responseText\n\t\t\t\telse\n\t\t\t\t\tp.resolve \"#{@status} #{@statusText}\"\n\t\treturn p\n\tPromise.series = (series...) ->\n\t\tseries = $(series).flatten()\n\t\trun = (i) -> ->\n\t\t\tif i >= series.length\n\t\t\t\treturn\n\t\t\tseries[i] = series[i]().wait (err, result) ->\n\t\t\t\tp.resolve series[i] = [ err, result ]\n\t\t\t\t$.immediate run i + 1\n\t\tp = $.Progress(series.length)\n\t\t$.immediate run 0\n\t\treturn p\n\t$.depends 'dom', ->\n\t\tPromise.image = (src) ->\n\t\t\tp = $.Promise()\n\t\t\t$.extend image = new Image(),\n\t\t\t\tonerror: (e) -> p.reject e\n\t\t\t\tonload: -> p.resolve image\n\t\t\t\tsrc: src\n\t\t\tp\n\t$.depends 'type', ->\n\t\t$.type.register 'promise', is: (o) ->\n\t\t\treturn o? \\\n\t\t\t\tand ('object' is typeof o) \\\n\t\t\t\tand 'then' of o \\\n\t\t\t\tand 'function' is typeof o.then \\\n\t\t\t\tand o.then.length is 2\n\treturn $: { Promise, Progress }\n$.plugin\n\tprovides: 'prompt,confirm',\n\tdepends: 'synth,keyName'\n, ->\n\t_prompt_css = ->\n\t\tunless $(\"head .prompt\").length\n\t\t\t$(\"head\").append \"<style class='prompt'>\" + $.CSS.stringify(\n\t\t\t\t\".prompt\":\n\t\t\t\t\tposition: \"absolute\"\n\t\t\t\t\ttop: 0, left: 0\n\t\t\t\t\twidth: \"100%\", height: \"100%\"\n\t\t\t\t\tzIndex: \"999999\"\n\t\t\t\t\tbackground: \"rgba(0,0,0,.4)\"\n\t\t\t\t\tfontSize: \"12px\"\n\t\t\t\t\t\" input\":\n\t\t\t\t\t\tpadding: \"2px\"\n\t\t\t\t\t\tmargin: \"0px 0px 4px -4px\"\n\t\t\t\t\t\twidth: \"100%\"\n\t\t\t\t\t\" button\":\n\t\t\t\t\t\tfontSize: \"13px\"\n\t\t\t\t\t\t\".done\":\n\t\t\t\t\t\t\tfontSize: \"14px\"\n\t\t\t\t\t\" > center\":\n\t\t\t\t\t\twidth: \"200px\"\n\t\t\t\t\t\theight: \"44px\"\n\t\t\t\t\t\tmargin: \"20px auto\"\n\t\t\t\t\t\tpadding: \"16px\"\n\t\t\t\t\t\tbackground: \"#ffc\"\n\t\t\t\t\t\tborderRadius: \"5px\"\n\t\t\t) + \"</style>\"\n\t_prompt = (label, type, cb) ->\n\t\t_prompt_css()\n\t\tdialog = $.synth(\"\"\"\n\t\t\tdiv.prompt center\n\t\t\t\tinput[type=#{type}][placeholder=#{label}] + br +\n\t\t\t\tbutton.cancel 'Cancel' +\n\t\t\t\tbutton.done 'Done'\n\t\t\"\"\").appendTo(\"body\").first()\n\t\tinput = dialog.querySelector(\"input\")\n\t\tinput.onkeydown = (evt) ->\n\t\t\tswitch $.keyName evt.keyCode\n\t\t\t\twhen \"Enter\"\n\t\t\t\t\tdone input.value\n\t\t\t\twhen \"Esc\"\n\t\t\t\t\tdone null\n\t\tdoneButton = dialog.querySelector \"button.done\"\n\t\tcancelButton = dialog.querySelector \"button.cancel\"\n\t\tdone = (value) ->\n\t\t\tdelete doneButton.onclick\n\t\t\tdelete cancelButton.onclick\n\t\t\tdialog.parentNode.removeChild(dialog)\n\t\t\tcb value\n\t\tdoneButton.onclick = -> done input.value\n\t\tcancelButton.onclick = -> done null\n\t\tnull\n\t_confirm = (args...) ->\n\t\tcb = args.pop()\n\t\tlabel = args.shift()\n\t\tif args.length > 0\n\t\t\tbuttons = args\n\t\telse\n\t\t\tbuttons = { Yes: true, No: false }\n\t\t_prompt_css()\n\t\tdialog = $.synth(\"\"\"\n\t\t\tdiv.prompt center\n\t\t\t\tspan '#{label}' + br\n\t\t\"\"\").appendTo(\"body\")\n\t\tcenter = dialog.find('center')\n\t\tswitch $.type(buttons)\n\t\t\twhen 'array','bling'\n\t\t\t\tfor label in buttons\n\t\t\t\t\t$.synth(\"button[value=#{label}] '#{label}'\").appendTo center\n\t\t\twhen 'object'\n\t\t\t\tfor label,value of buttons\n\t\t\t\t\t$.synth(\"button[value=#{value}] '#{label}'\").appendTo center\n\t\tdialog.find(\"button\").bind \"click\", (evt) ->\n\t\t\tdialog.remove()\n\t\t\tcb evt.target.getAttribute('value')\n\t\tnull\n\treturn $: { prompt: _prompt, confirm: _confirm }\n$.plugin\n\tdepends: \"core\"\n\tprovides: \"pubsub\"\n, ->\n\tclass Hub\n\t\tconstructor: ->\n\t\t\t@listeners = {} \n\t\tpublish: (channel, args...) ->\n\t\t\tcaught = null\n\t\t\tfor listener in @listeners[channel] or= []\n\t\t\t\tif @filter(listener, args...)\n\t\t\t\t\ttry listener(args...)\n\t\t\t\t\tcatch err\n\t\t\t\t\t\tcaught ?= err\n\t\t\tif caught then throw caught\n\t\t\tswitch args.length\n\t\t\t\twhen 0 then null\n\t\t\t\twhen 1 then args[0]\n\t\t\t\telse args\n\t\tfilter: (listener, message) ->\n\t\t\tif 'patternObject' of listener\n\t\t\t\treturn $.matches listener.patternObject, message\n\t\t\treturn true\n\t\tpublisher: (channel, func) -> \n\t\t\tt = @ \n\t\t\t-> t.publish channel, func.apply @, arguments\n\t\tsubscribe: (channel, args...) ->\n\t\t\tfunc = args.pop()\n\t\t\tif args.length > 0\n\t\t\t\tfunc.patternObject = args.pop()\n\t\t\t(@listeners[channel] or= []).push func\n\t\t\tfunc\n\t\tunsubscribe: (channel, func) ->\n\t\t\tif not func?\n\t\t\t\t@listeners[channel] = []\n\t\t\telse\n\t\t\t\ta = (@listeners[channel] or= [])\n\t\t\t\tif (i = a.indexOf func)  > -1\n\t\t\t\t\ta.splice i,1\n\t\t\tfunc\n\tret = { $: { Hub } }\n\trootHub = new Hub()\n\tfor name,prop of Object.getOwnPropertyDescriptors(Hub.prototype)\n\t\tcontinue if name is 'constructor'\n\t\tif \"function\" is typeof prop.value\n\t\t\tret.$[name] = prop.value.bind rootHub\n\treturn ret\n$.plugin\n\tprovides: 'random'\n\tdepends: 'type'\n, ->\n\tenglishAlphabet = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\".split \"\"\n\tuuidAlphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\"\n\t{ floor, abs, log } = Math\n\tmax_int = 0xFFFFFFFF\n\ts = new Uint32Array(2)\n\tnext = ->\n\t\ts0 = s[0]\n\t\ts1 = s[1]\n\t\tresult = (s0 + s1) % max_int\n\t\ts1 ^= s0\n\t\ts[0] = (s0 << 27) | (s0 >>> 5) ^ s1 ^ (s1 << 7)\n\t\ts[1] = (s1 << 18) | (s1 >>> 14)\n\t\treturn result\n\trandom = -> next() / max_int\n\t$.defineProperty random, 'seed',\n\t\tset: (n) ->\n\t\t\ts[0] = n\n\t\t\ts[1] = 1\n\t\t\tnext(); next(); next();\n\t\t\tn\n\trandom.seed = +new Date()\n\t$: random: $.extend random,\n\t\t\treal: real = (min, max) ->\n\t\t\t\tif not min?\n\t\t\t\t\t[min,max] = [0,1.0]\n\t\t\t\tif not max?\n\t\t\t\t\t[min,max] = [0,min]\n\t\t\t\t(random() * (max - min)) + min\n\t\t\tinteger: integer = (min, max) -> floor real min, max\n\t\t\tstring: string = (len, prefix=\"\", alphabet=englishAlphabet) ->\n\t\t\t\tprefix += element(alphabet) while prefix.length < len\n\t\t\t\tprefix\n\t\t\tcoin: (balance=.5) -> random() <= balance\n\t\t\telement: element = (arr, weights) ->\n\t\t\t\tif weights?\n\t\t\t\t\tw = $(weights)\n\t\t\t\t\tw = w.scale 1.0/w.sum()\n\t\t\t\t\ti = 0\n\t\t\t\t\tsorted = $(arr).map((x) ->\n\t\t\t\t\t\tv: x\n\t\t\t\t\t\tw: w[i++]\n\t\t\t\t\t).sortBy (x) -> -x.w\n\t\t\t\t\tr = random()\n\t\t\t\t\tsum = 0\n\t\t\t\t\tfor item in sorted\n\t\t\t\t\t\treturn item.v if (sum += item.w) >= r\n\t\t\t\treturn arr[integer 0, arr.length]\n\t\t\tgaussian: (mean=0.5, ssig=0.12) -> \n\t\t\t\twhile true\n\t\t\t\t\tu = random()\n\t\t\t\t\tv = 1.7156 * (random() - 0.5)\n\t\t\t\t\tx = u - 0.449871\n\t\t\t\t\ty = abs(v) + 0.386595\n\t\t\t\t\tq = (x*x) + y*(0.19600*y-0.25472*x)\n\t\t\t\t\tbreak unless q > 0.27597 and (q > 0.27846 or (v*v) > (-4*log(u)*u*u))\n\t\t\t\treturn mean + ssig*v/u\n\t\t\tdie: die = (faces) -> \n\t\t\t\tinteger 1, faces+1\n\t\t\tdice: (n, faces) -> \n\t\t\t\t$( die(faces) for [0...n] by 1 )\n\t\t\tuuid: ->\n\t\t\t\t$(8,4,4,4,12).map(-> string @,'',uuidAlphabet).join '-'\n$.plugin\n\tprovides: \"render\"\n\tdepends: \"promise, type, logger\"\n, ->\n\tlog = $.logger \"[render]\"\n\tconsume_forever = (promise, opts, p = $.Promise()) ->\n\t\tunless $.is \"promise\", promise\n\t\t\treturn $.Promise().resolve(reduce promise, opts)\n\t\tpromise.wait (err, result) ->\n\t\t\tif err then return p.reject err\n\t\t\tr = reduce result, opts\n\t\t\tif $.is 'promise', r\n\t\t\t\tconsume_forever r, opts, p\n\t\t\telse p.resolve(r)\n\t\tp\n\trender = (o, opts = {}) ->\n\t\tconsume_forever r = (reduce [ o ], opts), opts\n\t\n\tobject_handlers = {\n\t\ttext: (o, opts) -> reduce o[opts.lang ? \"EN\"], opts\n\t}\n\t\n\trender.register = register = (t, f) -> object_handlers[t] = f\n\trender.reduce = reduce = (o, opts) -> \n\t\t(t = $.type.lookup o).reduce(o, t, opts)\n\t$.type.extend\n\t\tunknown:   reduce: (o, t, opts) -> \"[ cant reduce type: #{t} ]\"\n\t\tstring:    reduce: $.identity\n\t\thtml:      reduce: $.identity\n\t\tnull:      reduce: (o, t, opts) -> t\n\t\tundefined: reduce: (o, t, opts) -> t\n\t\tnumber:    reduce: (o, t, opts) -> String o\n\t\tfunction:  reduce: (o, t, opts) ->\n\t\t\tswitch f.length\n\t\t\t\twhen 0,1 then reduce f(opts)\n\t\t\t\telse $.Promise.wrap f, opts\n\t\tobject: reduce: (o, t, opts) ->\n\t\t\tif (t = o.t ? o.type) of object_handlers\n\t\t\t\tobject_handlers[t].call o, o, opts\n\t\t\telse \"[ no handler for object type: '#{t}' #{JSON.stringify(o).substr 0,20}... ]\"\n\t\tpromise: reduce: (o, t, opts) ->\n\t\t\tq = $.Promise()\n\t\t\to.wait finish_q = (err, result) ->\n\t\t\t\treturn q.reject(err) if err\n\t\t\t\tif $.is 'promise', r = reduce result, opts\n\t\t\t\t\tr.wait finish_q\n\t\t\t\telse\n\t\t\t\t\tq.resolve r\n\t\t\tq\n\t\tarray: reduce: array_reduce = (o, t, opts) ->\n\t\t\tp = $.Progress m = 1 \n\t\t\tq = $.Promise() \n\t\t\tn = []\n\t\t\tp.wait (err) ->\n\t\t\t\tif err then q.reject(err) else q.resolve(finalize n, opts)\n\t\t\thas_promises = false\n\t\t\tfor x, i in o then do (x,i) ->\n\t\t\t\tn[i] = y = reduce x, opts \n\t\t\t\tif $.is 'promise', y\n\t\t\t\t\thas_promises = true\n\t\t\t\t\tp.progress null, ++m\n\t\t\t\t\ty.wait finish_p = (err, result) -> \n\t\t\t\t\t\treturn p.reject(err) if err\n\t\t\t\t\t\trp = reduce result, opts\n\t\t\t\t\t\tif $.is 'promise', rp\n\t\t\t\t\t\t\trp.wait finish_p\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tp.resolve n[i] = rp\n\t\t\tp.resolve(1) \n\t\t\tif has_promises then q\n\t\t\telse finalize n\n\t\tbling: reduce: array_reduce\n\tfinalize = (o, opts) ->\n\t\t(t = $.type.lookup o).finalize(o, t, opts)\n\t$.type.extend\n\t\tunknown:   finalize: (o, t, opts) -> \"[ cant finalize type: #{t} ]\"\n\t\tstring:    finalize: $.identity\n\t\thtml:      finalize: $.identity\n\t\tnumber:    finalize: (o, t, opts) -> String o\n\t\tarray:     finalize: array_finalize = (o, t, opts) -> (finalize(x, opts) for x in o).join ''\n\t\tbling:     finalize: array_finalize\n\t\tnull:      finalize: -> \"null\"\n\t\tundefined: finalize: -> \"undefined\"\n\t\n\taka = (name) -> object_handlers[name]\n\tregister 'link', (o, opts) -> [\n\t\t\"<a\"\n\t\t\t[\" #{k}='\",o[k],\"'\"] for k in [\"href\",\"name\",\"target\"] when k of o\n\t\t\">\",reduce(o.content,opts),\"</a>\"\n\t]\n\tregister 'a', aka 'link'\n\tregister 'let', (o, opts) ->\n\t\tsave = opts[o.name]\n\t\topts[o.name] = o.value\n\t\tret = reduce o.content, opts\n\t\tif save is undefined then delete opts[o.name]\n\t\telse opts[o.name] = save\n\t\treturn ret\n\tregister 'set', aka 'let'\n\tregister 'get', (o, opts) -> reduce opts[o.name], opts\n\treturn $: { render }\n$.plugin\n\tprovides: \"sortBy,sortedIndex,sortedInsert,groupBy\"\n, ->\n\t$:\n\t\tsortedIndex: (array, item, sorter, lo = 0, hi = array.length) ->\n\t\t\tcmp = switch true\n\t\t\t\twhen $.is \"string\", sorter then (a,b) -> a[sorter] < b[sorter]\n\t\t\t\twhen $.is \"function\", sorter then (a,b) -> sorter(a) < sorter(b)\n\t\t\t\telse (a,b) -> a < b\n\t\t\twhile lo < hi\n\t\t\t\tmid = (hi + lo)>>>1\n\t\t\t\tif cmp array[mid], item\n\t\t\t\t\tlo = mid + 1\n\t\t\t\telse\n\t\t\t\t\thi = mid\n\t\t\treturn lo\n\tsortBy: (sorter) ->\n\t\ta = $()\n\t\tfor item in @\n\t\t\ta.sortedInsert(item, sorter)\n\t\ta\n\tsortedInsert: (item, sorter) ->\n\t\tif @length is 0 then @push item\n\t\telse @splice ($.sortedIndex @, item, sorter), 0, item\n\t\t@\n\tgroupBy: (sorter) ->\n\t\tgroups = {}\n\t\t\n\t\tswitch $.type sorter\n\t\t\twhen 'array','bling'\n\t\t\t\tfor x in @\n\t\t\t\t\tc = (x[k] for k in sorter).join \",\"\n\t\t\t\t\t(groups[c] or= $()).push( x)\n\t\t\twhen 'string' then for x in @ then (groups[x[sorter]] or= $()).push( x)\n\t\t\twhen 'function' then for x in @ then (groups[sorter(x)] or= $()).push( x)\n\t\treturn $.valuesOf groups\n$.plugin\n\tprovides: \"StateMachine\"\n\tdepends: \"type, logger\"\n, ->\n\t_callAll = (f, c, arg) ->\n\t\twhile (typeof f) is \"function\"\n\t\t\tf = f.call c, arg\n\t\tc.state = f\n\tkeyEscapes =\n\t\t\"\\n\": \"n\"\n\t\t\"\\r\": \"r\"\n\t\t\"\\t\": \"t\"\n\t\t\"\\\\\": \"\\\\\"\n\t\t\"'\": \"'\"\n\t\t'\"': '\"'\n\tescapeAsKey = (c) ->\n\t\tc of keyEscapes \\\n\t\t\tand \"\\\\\" + keyEscapes[c] \\\n\t\t\tor c\n\tlog = $.logger \"[StateMachine]\"\n\textractCode = (f, priorText='') ->\n\t\treturn \"\" unless f?\n\t\ts = f.toString() \\\n\t\t\t.replace(/^\\s+/,\"\") \\\n\t\t\t.replace(/\\r/g, \"##R##\") \\\n\t\t\t.replace(/\\n/g, \"##N##\") \\\n\t\t\t.replace(/\\/\\*(.*)\\*\\//g, \"\") \\\n\t\t\t.replace(/\\/\\/(.*)(##N##|##R##)*/g,\"\")\n\t\tif s.indexOf(\"function\") is 0\n\t\t\ts = s.replace(/function[^{]*{\\s*/,priorText)\n\t\telse if /\\([^{]+ *=>\\s*{/.test s\n\t\t\ts = s.replace(/\\([^{]+ *{\\s*/,priorText)\n\t\treturn s \\\n\t\t\t.replace(/return ([^;]+),(\\d+)/g, '$1;s=$2') \\\n\t\t\t.replace(/return /g, 's=') \\\n\t\t\t.replace(/\\s*}$/,'') \\\n\t\t\t.replace(/([{}\\[\\],\\\\\\/+*-]*)(##N##|##R##)\\s*/g,'$1') \\\n\t\t\t.replace(/;*(##N##|##R##)\\s*/g,';') \\\n\t\t\t.replace(/##R##/g, \"\\r\") \\\n\t\t\t.replace(/##N##/g, \"\\n\") \\\n\t\t\t.replace(/^\\s+/,\"\") \\\n\t\t\t.replace(/\\s+$/,\"\") \\\n\t\t\t.replace(/\\r|\\n/g,'') \\\n\t\t\t? \"\"\n\tcompileStateMachine = (table, debug=false) ->\n\t\tparse = null\n\t\tnl = if debug then \"\\n\" else \"\"\n\t\ttrace = debug and \"$.log('state:',s,'i:',i,'c:',c);\" or \"\"\n\t\tret = \"s=s|0;for(i=i|0;i<=d.length;i++){c=d[i]||'eof';#{trace}switch(s){#{nl}\"\n\t\tfor state,rules of table\n\t\t\tif 'enter' of rules \n\t\t\t\tpriorText = \"p=s;#{nl}\"\n\t\t\t\tonEnter = extractCode(rules.enter, priorText)\n\t\t\t\tonEnter = \"#{nl}if(s!==p){#{onEnter};if(s!==p){i--;break}}\"\n\t\t\telse\n\t\t\t\tonEnter = \"\"\n\t\t\thasRules = Object.keys(rules).length > (if 'enter' of rules then 1 else 0)\n\t\t\tret += \"case #{state}:#{onEnter}\" \\\n\t\t\t\t+ (hasRules and \"switch(c){\" or \"break;\\n\")\n\t\t\tfor _c,_code of rules\n\t\t\t\tcontinue if _c is 'enter' \n\t\t\t\tret += _c is 'def' and \"default:\" or \"case '#{escapeAsKey _c}':\"\n\t\t\t\tret += extractCode(_code, priorText) + \";break;\"\n\t\t\tret += hasRules and \"}break;\" or \"\"\n\t\tret += \"}}return this;\"\n\t\tret = ret.replace(/\\s+&&\\s+/g, '&&') \\\n\t\t\t.replace(/\\s+\\|\\|\\s+/g, '||') \\\n\t\t\t.replace(/\\s+([+*/=-]*=)\\s+/g, '$1')\n\t\ttry return (new Function \"d\", \"s\", \"i\", \"p\", \"c\", ret)\n\t\tcatch err\n\t\t\t$.log \"Failed to parse compiled machine: \", ret\n\t\t\tthrow err\n\tcompileStateMachine.extractCode = extractCode \n\t$: StateMachine: compileStateMachine\n$.plugin\n\tprovides: \"string\"\n\tdepends: \"type\"\n, ->\n\tsafer = (f) -> (a...) ->\n\t\ttry return f(a...)\n\t\tcatch err then return \"[toString Error: #{err.message}]\"\n\tescape_single_quotes = (s) -> s.replace(/([^\\\\]{1})'/g,\"$1\\\\'\")\n\tstrip_ansi_codes = (s) -> String(s).replace(/[\\u001b\\u009b][[()#;?]*(?:[0-9]{1,4}(?:;[0-9]{0,4})*)?[0-9A-ORZcf-nqry=><]/g,'')\n\t$.type.extend\n\t\tunknown:\n\t\t\tstring: safer (o) -> o.toString?() ? String(o)\n\t\t\trepr: safer (o) -> $.type.lookup(o).string(o)\n\t\t\tnumber: safer (o) -> parseFloat String o\n\t\tnull:\n\t\t\tstring: -> \"null\"\n\t\tundefined:\n\t\t\tstring: -> \"undefined\"\n\t\tbuffer:\n\t\t\tstring: safer (o) -> String(o)\n\t\t\trepr:   safer (o) -> \"Buffer(#{JSON.stringify o.toJSON()})\"\n\t\tstring:\n\t\t\tnumber: safer parseFloat\n\t\t\trepr: (s) -> \"'#{escape_single_quotes s}'\"\n\t\tarray:\n\t\t\tstring: safer (a) -> \"[#{a.map($.toString).join(', ')}]\"\n\t\t\trepr:   safer (a) -> \"[#{a.map($.toRepr).join(', ')}]\"\n\t\targuments:\n\t\t\tstring: safer (a) -> \"[#{($.toString(x) for x in a).join(', ')}]\"\n\t\t\trepr: safer (a) -> \"[#{($.toRepr(x) for x in a).join(', ')}]\"\n\t\tobject:\n\t\t\tstring: safer (o) ->\n\t\t\t\tret = []\n\t\t\t\tfor k of o\n\t\t\t\t\ttry v = o[k]\n\t\t\t\t\tcatch err\n\t\t\t\t\t\tv = \"[Error: #{err.message}]\"\n\t\t\t\t\tret.push \"#{k}:#{$.toString v}\"\n\t\t\t\t\"{\" + ret.join(', ') + \"}\"\n\t\t\trepr: safer (o) ->\n\t\t\t\tret = []\n\t\t\t\tfor k of o\n\t\t\t\t\ttry v = o[k]\n\t\t\t\t\tcatch err\n\t\t\t\t\t\tv = \"[Error: #{err.message}]\"\n\t\t\t\t\tret.push \"\\\"#{k}\\\": #{$.toRepr v}\"\n\t\t\t\t\"{\" + ret.join(', ') + \"}\"\n\t\tfunction:\n\t\t\trepr: (f) -> f.toString()\n\t\t\tstring: (f) -> f.toString().replace(/^([^{]*){(?:.|\\n|\\r)*}$/, '$1{ ... }')\n\t\tnumber:\n\t\t\trepr: (n) -> String(n)\n\t\t\tstring: safer (n) -> switch\n\t\t\t\twhen n.precision? then n.toPrecision(n.precision)\n\t\t\t\twhen n.fixed? then n.toFixed(n.fixed)\n\t\t\t\telse String(n)\n\treturn {\n\t\t$:\n\t\t\ttoString: (x) ->\n\t\t\t\tif arguments.length is 0 then \"function Bling() { [ ... ] }\"\n\t\t\t\telse\n\t\t\t\t\ttry\n\t\t\t\t\t\t$.type.lookup(x).string(x)\n\t\t\t\t\tcatch err\n\t\t\t\t\t\t\"[$.toString Error: #{err.message}]\"\n\t\t\ttoRepr: (x) -> $.type.lookup(x).repr(x)\n\t\t\tpx: (x, delta=0) -> x? and (parseInt(x,10)+(parseInt(delta)|0))+\"px\"\n\t\t\tcapitalize: (name) ->\n\t\t\t\t(name.split(\" \").map (x) -> x[0].toUpperCase() + x.substring(1).toLowerCase()).join(\" \")\n\t\t\tslugize: slugize = (phrase, slug=\"-\") ->\n\t\t\t\tphrase = switch $.type phrase\n\t\t\t\t\twhen 'null','undefined' then \"\"\n\t\t\t\t\twhen 'object' then ($.slugize(k,slug) + slug + $.slugize(v, slug) for k,v of phrase).join slug\n\t\t\t\t\twhen 'array','bling' then phrase.map((item)-> $.slugize item, slug).join slug\n\t\t\t\t\telse String(phrase)\n\t\t\t\tphrase.toLowerCase() \\\n\t\t\t\t\t.replace(/^\\s+/, '') \\\n\t\t\t\t\t.replace(/\\s+$/, '') \\\n\t\t\t\t\t.replace(/\\t/g, ' ') \\\n\t\t\t\t\t.replace(/[^A-Za-z0-9. -]/g, '') \\\n\t\t\t\t\t.replace(/\\s+/g,'-')\n\t\t\tstubize: slugize\n\t\t\tdashize: (name) ->\n\t\t\t\tret = \"\"\n\t\t\t\tfor i in [0...(name?.length|0)]\n\t\t\t\t\tc = name.charCodeAt i\n\t\t\t\t\tif 91 > c > 64\n\t\t\t\t\t\tc += 32\n\t\t\t\t\t\tret += '-'\n\t\t\t\t\tret += String.fromCharCode(c)\n\t\t\t\tret\n\t\t\tcamelize: (name) ->\n\t\t\t\tname = $.slugize(name)\n\t\t\t\tname.split('-')\n\t\t\t\twhile (i = name?.indexOf('-')) > -1\n\t\t\t\t\tname = $.stringSplice(name, i, i+2, name[i+1].toUpperCase())\n\t\t\t\tname\n\t\t\tcommaize: (num, comma=',',dot='.',currency='') -> \n\t\t\t\tif $.is('number', num) and isFinite(num)\n\t\t\t\t\ts = String(num)\n\t\t\t\t\tsign = if (num < 0) then \"-\" else \"\"\n\t\t\t\t\t[a, b] = s.split '.' \n\t\t\t\t\tif a.length > 3 \n\t\t\t\t\t\ta = $.stringReverse $.stringReverse(a).match(/\\d{1,3}/g).join comma\n\t\t\t\t\treturn sign + currency + a + (if b? then dot+b else \"\")\n\t\t\t\telse if (typeof(num) is 'number' and isNaN(num)) or num in [Infinity, -Infinity]\n\t\t\t\t\treturn String num\n\t\t\t\telse return undefined\n\t\t\tpadLeft: (s, n, c = \" \") ->\n\t\t\t\tdn = n - strip_ansi_codes(s).length\n\t\t\t\treturn if dn > 0 then $.zeros(dn, c).join('') + s\n\t\t\t\telse s\n\t\t\tpadRight: (s, n, c = \" \") ->\n\t\t\t\tdn = n - strip_ansi_codes(s).length\n\t\t\t\treturn if dn > 0 then s + $.zeros(dn, c).join ''\n\t\t\t\telse s\n\t\t\tstringTruncate: (s, n, c='...',sep=' ') -> \n\t\t\t\treturn s if s.length <= n\n\t\t\t\treturn c if c.length >= n\n\t\t\t\ts = s.split(sep) \n\t\t\t\tr = []\n\t\t\t\twhile n > 0 and s.length > 0\n\t\t\t\t\tx = s.shift()\n\t\t\t\t\tn -= x.length\n\t\t\t\t\tif n >= 0\n\t\t\t\t\t\tr.push x\n\t\t\t\tr.join(sep) + c\n\t\t\tstringCount: (s, x, i = 0, n = 0) ->\n\t\t\t\tif (j = s.indexOf x,i) > i-1\n\t\t\t\t\t$.stringCount s, x, j+1, n+1\n\t\t\t\telse n\n\t\t\tstringSplice: (s, i, j, n) ->\n\t\t\t\tnn = s.length\n\t\t\t\tend = j\n\t\t\t\tif end < 0\n\t\t\t\t\tend += nn\n\t\t\t\tstart = i\n\t\t\t\tif start < 0\n\t\t\t\t\tstart += nn\n\t\t\t\ts.substring(0,start) + n + s.substring(end)\n\t\t\tstringReverse: (s) -> s.split('').reverse().join('')\n\t\t\tchecksum: (s) ->\n\t\t\t\ta = 1; b = 0\n\t\t\t\tfor i in [0...s.length]\n\t\t\t\t\ta = (a + s.charCodeAt(i)) % 65521\n\t\t\t\t\tb = (b + a) % 65521\n\t\t\t\t(b << 16) | a\n\t\t\trepeat: (x, n=2) -> switch\n\t\t\t\twhen n is 1 then x\n\t\t\t\twhen n < 1 then \"\"\n\t\t\t\twhen $.is \"string\", x then $.zeros(n, x).join ''\n\t\t\t\telse $.zeros(n, x)\n\t\t\tstringBuilder: do ->\n\t\t\t\tlen = (s) -> s?.toString().length | 0\n\t\t\t\t->\n\t\t\t\t\tif $.is(\"global\", @) then return new $.stringBuilder()\n\t\t\t\t\titems = []\n\t\t\t\t\t$.extend @,\n\t\t\t\t\t\tlength: 0\n\t\t\t\t\t\tappend:  (s) => items.push s; @length += len s\n\t\t\t\t\t\tprepend: (s) => items.splice 0,0,s; @length += len s\n\t\t\t\t\t\tclear:       => ret = @toString(); items = []; @length = 0; ret\n\t\t\t\t\t\ttoString:    -> items.join(\"\")\n\t\ttoString: -> $.toString @\n\t\ttoRepr: -> $.toRepr @\n\t\treplace: (patt, repl) ->\n\t\t\t@map (s) -> s.replace(patt, repl)\n\t\tindexOf: (target, offset=0) ->\n\t\t\tif $.is 'regexp', target\n\t\t\t\tfor i in [offset...@length] by 1\n\t\t\t\t\tif target.test @[i]\n\t\t\t\t\t\treturn i\n\t\t\t\treturn -1\n\t\t\telse Array.prototype.indexOf.apply @, arguments\n\t}\n$.plugin\n\tprovides: \"symbol\"\n\tdepends: \"type\"\n, ->\n\tsymbol = null\n\tcache = {}\n\tg = $.global\n\tg['Bling'] = $\n\tif module?\n\t\tmodule.exports = $\n\t$.defineProperty $, \"symbol\",\n\t\tset: (v) ->\n\t\t\tg[symbol] = cache[symbol]\n\t\t\tcache[symbol = v] = g[v]\n\t\t\tg[v] = Bling\n\t\tget: -> symbol\n\treturn $:\n\t\tsymbol: \"$\"\n\t\tnoConflict: ->\n\t\t\t$.symbol = \"Bling\"\n\t\t\tBling\n$.plugin\n\tprovides: \"synth\"\n\tdepends: \"StateMachine, type, dom\"\n, ->\n\tcommon = \n\t\t\"#\":  -> 2\n\t\t\".\":  -> 3\n\t\t\"[\":  -> 4\n\t\t'\"':  -> 6\n\t\t\"'\":  -> 7\n\t\t\" \":  -> @emitText()\n\t\t\"\\t\": -> @emitText()\n\t\t\"\\n\": -> @emitText()\n\t\t\"\\r\": -> @emitText()\n\t\t\",\":  -> @emitNodeAndReparent @fragment\n\t\t\"+\":  -> @emitNodeAndReparent @cursor.parentNode ? @fragment\n\t\teof:  -> @emitText()\n\tno_eof =\n\t\teof: -> @emitError(\"Unexpected end of input\")\n\thtmlType = $.type.lookup(\"<html>\")\n\trule = (a...) -> $.extend a...\n\t\n\tsynthMachine = {\n\t\treset: ->\n\t\t\t@fragment = @cursor = document.createDocumentFragment()\n\t\t\t@tag = @id = @cls = @attr = @val = @text = \"\"\n\t\t\t@attrs = {}\n\t\t\t@\n\t\temitError: (msg) -> throw new Error \"#{msg}: #{@input}\"\n\t\temitNodeAndReparent: (nextCursor) ->\n\t\t\tif @tag?.length > 0\n\t\t\t\tnode = document.createElement @tag\n\t\t\t\t@id?.length > 0 and node.id = @id\n\t\t\t\t@cls?.length > 0 and node.className = @cls\n\t\t\t\t@cursor.appendChild node\n\t\t\t\tnode.setAttribute(k, v) for k,v of @attrs\n\t\t\t@cursor = node and (nextCursor or node) or (nextCursor or @cursor)\n\t\t\t0\n\t\temitText: ->\n\t\t\t@emitNodeAndReparent()\n\t\t\t@text?.length \\\n\t\t\t\tand @cursor.appendChild htmlType.node(@text) \\\n\t\t\t\tor @text = \"\"\n\t\t\t0\n\t\trun: $.StateMachine [\n\t\t\tenter:   ->\n\t\t\t\t\t@tag = @id = @cls = @attr = @val = @text = \"\"\n\t\t\t\t\t@attrs = {}\n\t\t\t\t\t1\n\t\t\trule { def: (c) ->  @tag += c; 1 }, common\n\t\t\trule { def: (c) ->  @id += c; 2 }, common\n\t\t\trule { def: (c) ->  @cls += c; 3 }, common,\n\t\t\t\tenter: -> @cls += (@cls.length and \" \" or \"\"); 3\n\t\t\t\t\".\":   -> @cls += \" \"; 3 \n\t\t\trule { def: (c) ->  @attr += c; 4 }, no_eof,\n\t\t\t\t\"=\":   -> 5\n\t\t\t\t\"]\":   -> @attrs[@attr] = @val; @attr = @val = \"\"; 1\n\t\t\trule { def: (c) ->  @val += c; 5 }, no_eof,\n\t\t\t\t\"]\":   -> @attrs[@attr] = @val; @attr = @val = \"\"; 1\n\t\t\trule { def: (c) ->  @text += c; 6 }, no_eof,\n\t\t\t\t'\\\\':  -> 8 \n\t\t\t\t'\"':   -> @emitText()\n\t\t\trule { def: (c) ->  @text += c; 7 }, no_eof,\n\t\t\t\t'\\\\':  -> 9 \n\t\t\t\t\"'\":   -> @emitText()\n\t\t\trule { def: (c) ->  @text += c; 6 }, no_eof\n\t\t\trule { def: (c) ->  @text += c; 7 }, no_eof\n\t\t]\n\t}\n\treturn $: synth: (expr) ->\n\t\tf = synthMachine.reset().run(expr, 0).fragment\n\t\treturn $(if f.childNodes.length is 1 then f.childNodes[0] else f)\n$.plugin\n\tdepends: \"type, function\"\n\tprovides: \"template\"\n, -> \n\tcurrent_engine = null\n\tengines = {}\n\ttemplate = {\n\t\tregister_engine: (name, render_func) ->\n\t\t\tengines[name] = render_func\n\t\t\tif not current_engine?\n\t\t\t\tcurrent_engine = name\n\t\trender: (text, args) ->\n\t\t\tif current_engine of engines\n\t\t\t\tengines[current_engine](text, args)\n\t}\n\t$.defineProperty template, 'engine', {\n\t\tget: -> current_engine\n\t\tset: (v) ->\n\t\t\tif not v of engines\n\t\t\t\tthrow new Error \"invalid template engine: #{v} not one of #{Object.Keys(engines)}\"\n\t\t\telse\n\t\t\t\tcurrent_engine = v\n\t}\n\t$.defineProperty template, 'engines', {\n\t\tget: -> $.keysOf(engines)\n\t}\n\ttemplate.register_engine 'null', do ->\n\t\treturn $.identity\n\tmatch_forward = (text, find, against, start, stop = -1) ->\n\t\tcount = 1\n\t\tif stop < 0\n\t\t\tstop = text.length + 1 + stop\n\t\tfor i in [start...stop] by 1\n\t\t\tt = text[i]\n\t\t\tif t is against\n\t\t\t\tcount += 1\n\t\t\telse if t is find\n\t\t\t\tcount -= 1\n\t\t\tif count is 0\n\t\t\t\treturn i\n\t\treturn -1\n\ttemplate.register_engine 'pythonic', do ->\n\t\ttype_re = /([0-9#0+-]*)\\.*([0-9#+-]*)([diouxXeEfFgGcrsqm])((?:.|\\n)*)/\n\t\tchunk_re = /%[\\(\\/]/\n\t\tcompile = (text) ->\n\t\t\tchunks = text.split chunk_re\n\t\t\tn = chunks.length\n\t\t\tret = [chunks[0]]\n\t\t\tj = 1 \n\t\t\tfor i in [1...n] by 1\n\t\t\t\tend = match_forward chunks[i], ')', '(', 0, -1\n\t\t\t\tif end is -1\n\t\t\t\t\treturn \"Template syntax error: unmatched '%(' starting at: #{chunks[i].substring(0,15)}\"\n\t\t\t\tkey = chunks[i].substring 0, end\n\t\t\t\trest = chunks[i].substring end\n\t\t\t\tmatch = type_re.exec rest\n\t\t\t\tif match is null\n\t\t\t\t\treturn \"Template syntax error: invalid type specifier starting at '#{rest}'\"\n\t\t\t\trest = match[4]\n\t\t\t\tret[j++] = key\n\t\t\t\tret[j++] = match[1]|0\n\t\t\t\tret[j++] = match[2]|0\n\t\t\t\tret[j++] = match[3]\n\t\t\t\tret[j++] = rest\n\t\t\treturn ret\n\t\tcompile.cache = {}\n\t\treturn render = (text, values) -> \n\t\t\tcache = compile.cache[text] \n\t\t\tif not cache?\n\t\t\t\tcache = compile.cache[text] = compile(text) \n\t\t\toutput = [cache[0]] \n\t\t\tj = 1 \n\t\t\tn = cache.length\n\t\t\tfor i in [1..n-5] by 5\n\t\t\t\t[key, pad, fixed, type, rest] = cache[i..i+4]\n\t\t\t\tvalue = values[key]\n\t\t\t\tif not value?\n\t\t\t\t\tvalue = \"missing value: #{key}\"\n\t\t\t\toutput[j++] = switch type\n\t\t\t\t\twhen 'd' then \"\" + parseInt(value, 10)\n\t\t\t\t\twhen 'f' then parseFloat(value).toFixed(fixed)\n\t\t\t\t\twhen 's' then \"\" + value\n\t\t\t\t\telse \"\" + value\n\t\t\t\tif pad > 0\n\t\t\t\t\toutput[j] = $.padLeft output[j], pad\n\t\t\t\toutput[j++] = rest\n\t\t\toutput.join \"\"\n\treturn $: { template }\n$.plugin\n\tprovides: \"throttle\"\n\tdepends: \"core\"\n, ->\n\tdefer = (f, ctx, args, ms, prior) ->\n\t\tclearTimeout prior\n\t\treturn setTimeout (=> f.apply ctx, args), ms\n\tthrottle = (f, ctx, args, ms, last) ->\n\t\tif (dt = $.now - last) > ms\n\t\t\tlast += dt\n\t\t\tf.apply ctx, args\n\t\treturn last\n\t$:\n\t\tthrottle: (ms, f) ->\n\t\t\tlast = 0\n\t\t\t->\n\t\t\t\tlast = throttle f, @, arguments, ms, last\n\t\t\t\tnull\n\t\tdebounce: (ms, f) ->\n\t\t\ttimeout = null\n\t\t\t->\n\t\t\t\ttimeout = defer f, @, arguments, ms, timeout\n\t\t\t\tnull\n\t\trate_limit: (ms, f) ->\n\t\t\t\"\"\"\n\t\t\trate_limit is a combination of throttle and debounce.\n\t\t\t what we want from a stream throttle is to fire at most every _ms_ and\n\t\t\t then fire one last time after a gap of _ms_ at the end.\n\t\t\t\"\"\"\n\t\t\tlast = 0\n\t\t\ttimeout = null\n\t\t\t->\n\t\t\t\ta = arguments\n\t\t\t\ttimeout = defer f, @, arguments, ms, timeout\n\t\t\t\tlast = throttle f, @, arguments, ms, last\n\t\t\t\tnull\n$.plugin\n\tprovides: 'TNET'\n\tdepends: \"type, string, function\"\n, -> \n\t#\n\t\n\tTypes =\n\t\t\"number\":\n\t\t\tsymbol: \"#\"\n\t\t\tpack: String\n\t\t\tunpack: Number\n\t\t\"string\":\n\t\t\tsymbol: \"'\"\n\t\t\tpack: $.identity\n\t\t\tunpack: $.identity\n\t\t\"bool\":\n\t\t\tsymbol: \"!\"\n\t\t\tpack: (b) -> String(not not b)\n\t\t\tunpack: (s) -> s is \"true\"\n\t\t\"null\":\n\t\t\tsymbol: \"~\"\n\t\t\tpack: -> \"\"\n\t\t\tunpack: -> null\n\t\t\"undefined\":\n\t\t\tsymbol: \"_\"\n\t\t\tpack: -> \"\"\n\t\t\tunpack: -> undefined\n\t\t\"array\":\n\t\t\tsymbol: \"]\"\n\t\t\tpack: (a) -> (packOne(y) for y in a).join('')\n\t\t\tunpack: (s) ->\n\t\t\t\tdata = []\n\t\t\t\tunpackingStack.push data\n\t\t\t\twhile s.length > 0\n\t\t\t\t\t[one, s] = unpackOne(s)\n\t\t\t\t\tdata.push(one)\n\t\t\t\tunpackingStack.pop()\n\t\t\t\tdata\n\t\t\"map\":\n\t\t\tsymbol: \"M\"\n\t\t\tpack: (m) ->\n\t\t\t\tret = ''\n\t\t\t\tm.forEach (v, k) ->\n\t\t\t\t\tret += packOne(k)+packOne(v)\n\t\t\t\tret\n\t\t\tunpack: (s) ->\n\t\t\t\tm = new Map()\n\t\t\t\tunpackingStack.push m\n\t\t\t\twhile s.length > 0\n\t\t\t\t\t[k, s] = unpackOne(s)\n\t\t\t\t\t[v, s] = unpackOne(s)\n\t\t\t\t\tm.set(k, v)\n\t\t\t\tunpackingStack.pop()\n\t\t\t\tm\n\t\t\"bling\":\n\t\t\tsymbol: \"$\"\n\t\t\tpack: (a) -> (packOne(y) for y in a).join('')\n\t\t\tunpack: (s) ->\n\t\t\t\tdata = $()\n\t\t\t\tunpackingStack.push data\n\t\t\t\twhile s.length > 0\n\t\t\t\t\t[one, s] = unpackOne(s)\n\t\t\t\t\tdata.push(one)\n\t\t\t\tunpackingStack.pop()\n\t\t\t\tdata\n\t\t\"object\":\n\t\t\tsymbol: \"}\"\n\t\t\tpack: (o) ->\n\t\t\t\t(packOne(k)+packOne(v) for k,v of o when k isnt \"constructor\" and o.hasOwnProperty(k)).join ''\n\t\t\tunpack: (s) ->\n\t\t\t\tdata = {}\n\t\t\t\tunpackingStack.push data\n\t\t\t\twhile s.length > 0\n\t\t\t\t\t[key, s] = unpackOne(s)\n\t\t\t\t\t[value, s] = unpackOne(s)\n\t\t\t\t\tdata[key] = value\n\t\t\t\tunpackingStack.pop()\n\t\t\t\tdata\n\t\t\"function\":\n\t\t\tsymbol: \")\"\n\t\t\tpack: (f) ->\n\t\t\t\ts = f.toString().replace(/(?:\\n|\\r)+\\s*/g,' ')\n\t\t\t\tname = \"\"\n\t\t\t\tname_re = /function\\s*(\\w+)\\(.*/g\n\t\t\t\tif name_re.test s\n\t\t\t\t\tname = s.replace name_re, \"$1\"\n\t\t\t\tparts = s.replace(/function\\s*\\w*\\(/,'')\n\t\t\t\t\t.replace(/\\/\\*.*\\*\\//g,'')\n\t\t\t\t\t.replace(/}$/,'')\n\t\t\t\t\t.split(/\\) {/)\n\t\t\t\targs = parts[0].split /, */\n\t\t\t\tbody = parts.slice(1).join(') {')\n\t\t\t\t\t.replace(/^\\s+/,'')\n\t\t\t\t\t.replace(/\\s*$/,'')\n\t\t\t\treturn $( name, args, body ).map(packOne).join ''\n\t\t\tunpack: (s) ->\n\t\t\t\t[name, rest] = unpackOne(s)\n\t\t\t\t[args, rest] = unpackOne(rest)\n\t\t\t\t[body, rest] = unpackOne(rest)\n\t\t\t\ttry return makeFunction name, args.join(), body\n\t\t\t\tcatch err\n\t\t\t\t\t$.log \"Failed to makeFunction.\"\n\t\t\t\t\t$.log \"Arguments:\", args.join()\n\t\t\t\t\t$.log \"Body:\", body\n\t\t\"regexp\":\n\t\t\tsymbol: \"/\"\n\t\t\tpack: (r) -> String(r).slice(1,-1)\n\t\t\tunpack: (s) -> RegExp(s)\n\t\t\"class\":\n\t\t\tsymbol: \"{\"\n\t\t\tpack: (o) ->\n\t\t\t\treturn [ Types.function.pack(o), packOne( o.prototype, \"object\" ) ].join ''\n\t\t\tunpack: (s) ->\n\t\t\t\t[s, rest] = unpackOne s\n\t\t\t\tf = eval s\n\t\t\t\t[f.prototype, rest] = unpackOne rest\n\t\t\t\tf\n\t\t\"class instance\":\n\t\t\tsymbol: \"C\"\n\t\t\tpack: (o) ->\n\t\t\t\tunless 'constructor' of o\n\t\t\t\t\tthrow new Error(\"TNET: cant pack non-class as class\")\n\t\t\t\tunless o.constructor of class_index\n\t\t\t\t\tthrow new Error(\"TNET: cant pack unregistered class (name: #{o.constructor.name})\")\n\t\t\t\tret = packOne(class_index[o.constructor])\n\t\t\t\tpackingStack.pop() \n\t\t\t\tret + packOne(o, \"object\") \n\t\t\tunpack: (s) ->\n\t\t\t\t[i, rest] = unpackOne(s)\n\t\t\t\t[obj, rest] = unpackOne(rest)\n\t\t\t\tif i <= classes.length\n\t\t\t\t\tobj.__proto__ = classes[i - 1].prototype\n\t\t\t\telse\n\t\t\t\t\t(unpackingStack.splice(0, unpackingStack.length))\n\t\t\t\t\tthrow new Error(\"TNET: attempt to unpack unregistered class index: #{i}\")\n\t\t\t\tobj\n\t\t\"circular reference\":\n\t\t\tsymbol: \"@\"\n\t\t\tpack: (i) -> String i\n\t\t\tunpack: (s) ->\n\t\t\t\tunpackingStack[parseInt s, 10]\n\tmakeFunction = (name, args, body) ->\n\t\teval(\"var f = function #{name}(#{args}){#{body}}\")\n\t\treturn f\n\tclasses = []\n\tclass_index = {}\n\tregister = (klass) ->\n\t\tclass_index[klass] or= classes.push klass\n\treverseLookup = {} \n\tdo -> for t,v of Types\n\t\treverseLookup[v.symbol] = v\n\tunpackingStack = []\n\tunpackOne = (data) ->\n\t\tif data and (i = data.indexOf \":\") > 0 \n\t\t\tdi = parseInt data[0...i], 10 \n\t\t\tif isFinite(di) and $.is 'number', di \n\t\t\t\tif i < (x = i + 1 + di) < data.length \n\t\t\t\t\tif sym = reverseLookup[data[x]] \n\t\t\t\t\t\treturn [ \n\t\t\t\t\t\t\tsym.unpack(data[i+1...x]),\n\t\t\t\t\t\t\tdata[x+1...]\n\t\t\t\t\t\t]\n\t\treturn [ undefined, data ]\n\tpackingStack = [] \n\tpackOne = (x, forceType) ->\n\t\ttx = forceType ? $.type x\n\t\tif tx is \"unknown\" and not (x.constructor?.name in [undefined, \"Object\"])\n\t\t\ttx = \"class instance\"\n\t\tunless (t = Types[tx])?\n\t\t\t(packingStack.splice(0, packingStack.length))\n\t\t\tthrow new Error(\"TNET: I don't know how to pack type '#{tx}' (#{x.constructor?.name})\")\n\t\tif (i = packingStack.indexOf x) > -1\n\t\t\tt = Types[\"circular reference\"]\n\t\t\tx = i \n\t\tpackingStack.push(x)\n\t\ttry\n\t\t\tdata = t.pack(x)\n\t\tcatch err\n\t\t\t(packingStack.splice(0, packingStack.length))\n\t\t\tthrow err\n\t\tpackingStack.pop()\n\t\treturn (data.length) + \":\" + data + t.symbol\n\t$:\n\t\tTNET:\n\t\t\tTypes: Types\n\t\t\tregisterClass: register\n\t\t\tstringify: packOne\n\t\t\tparse: (x) -> Bling.TNET.parseOne(x)?[0]\n\t\t\tparseOne: (x) -> \n\t\t\t\tif Buffer.isBuffer x\n\t\t\t\t\tx = x.toString()\n\t\t\t\tunpackOne(x)\n$.plugin\n\tprovides: \"trace\"\n\tdepends: \"function,type,logger\"\n, ->\n\t$.type.extend\n\t\tunknown:  { trace: $.identity }\n\t\tobject:   { trace: (label, o, tracer) ->\n\t\t\t(o[k] = $.trace(o[k], \"#{label}.#{k}\", tracer) for k in Object.keys(o))\n\t\t\to\n\t\t}\n\t\tarray:    { trace: (label, o, tracer) ->\n\t\t\t(o[i] = $.trace(o[i], \"#{label}[#{i}]\", tracer) for i in [0...o.length] by 1)\n\t\t\to\n\t\t}\n\t\tbling:    { trace: (label, o, tracer) ->\n\t\t\t(o[i] = $.trace(o[i], \"#{label}[#{i}]\", tracer) for i in [0...o.length] by 1)\n\t\t\to\n\t\t}\n\t\tfunction: { trace: (label, f, tracer) ->\n\t\t\tlabel or= f.name\n\t\t\tr = (a...) ->\n\t\t\t\tstart = +new Date\n\t\t\t\tf.apply @, a\n\t\t\t\tlabel = \"#{@name or $.type(@)}.#{label}\"\n\t\t\t\targs = $(a).map($.toRepr).join ','\n\t\t\t\telapsed = (+new Date - start).toFixed 0\n\t\t\t\ttracer \"#{label}(#{args}): #{elapsed}ms\"\n\t\t\tr.toString = -> \"{Trace '#{label}' of #{f.toString()}\"\n\t\t\tr\n\t\t}\n\ttime = (label, f, logger) ->\n\t\tunless $.is \"string\", label\n\t\t\t[f, logger, label] = [label, f, \"trace\"]\n\t\tunless $.is \"function\", logger\n\t\t\tlogger = $.log\n\t\tstart = +new Date\n\t\tret = do f\n\t\tlogger \"[#{label}] #{(+new Date - start).toFixed 0}ms\"\n\t\treturn ret\n\treturn $:\n\t\ttime: time\n\t\ttrace: (label, o, tracer) ->\n\t\t\tunless $.is \"string\", label\n\t\t\t\t[tracer, o] = [o, label]\n\t\t\ttracer or= $.log\n\t\t\tlabel or= \"\"\n\t\t\t$.type.lookup(o).trace(label, o, tracer)\n$.plugin\n\tdepends: \"dom\"\n, ->\n\tCOMMASEP = \", \"\n\tspeeds = \n\t\t\"slow\": 700\n\t\t\"medium\": 500\n\t\t\"normal\": 300\n\t\t\"fast\": 100\n\t\t\"instant\": 0\n\t\t\"now\": 0\n\taccel_props_re = /(?:scale(?:3d)*|translate(?:[XYZ]|3d)*|rotate(?:[XYZ]|3d)*)/\n\tupdateDelay = 30 \n\ttestStyle = document.createElement(\"div\").style\n\ttransformProperty = \"transform\"\n\ttransitionProperty = \"transition-property\"\n\ttransitionDuration = \"transition-duration\"\n\ttransitionTiming = \"transition-timing-function\"\n\tif \"WebkitTransform\" of testStyle\n\t\ttransformProperty = \"-webkit-transform\"\n\t\ttransitionProperty = \"-webkit-transition-property\"\n\t\ttransitionDuration = \"-webkit-transition-duration\"\n\t\ttransitionTiming = \"-webkit-transition-timing-function\"\n\telse if \"MozTransform\" of testStyle\n\t\ttransformProperty = \"-moz-transform\"\n\t\ttransitionProperty = \"-moz-transition-property\"\n\t\ttransitionDuration = \"-moz-transition-duration\"\n\t\ttransitionTiming = \"-moz-transition-timing-function\"\n\telse if \"OTransform\" of testStyle\n\t\ttransformProperty = \"-o-transform\"\n\t\ttransitionProperty = \"-o-transition-property\"\n\t\ttransitionDuration = \"-o-transition-duration\"\n\t\ttransitionTiming = \"-o-transition-timing-function\"\n\treturn {\n\t\t$:\n\t\t\tduration: (speed) ->\n\t\t\t\td = speeds[speed]\n\t\t\t\treturn d if d?\n\t\t\t\treturn parseFloat speed\n\t\ttransform: (end_css, speed, easing, callback) ->\n\t\t\tif $.is(\"function\",speed)\n\t\t\t\tcallback = speed\n\t\t\t\tspeed = easing = null\n\t\t\telse if $.is(\"function\",easing)\n\t\t\t\tcallback = easing\n\t\t\t\teasing = null\n\t\t\tspeed ?= \"normal\"\n\t\t\teasing or= \"ease\"\n\t\t\tduration = $.duration(speed) + \"ms\"\n\t\t\tprops = []\n\t\t\ttrans = \"\"\n\t\t\tcss = {}\n\t\t\tfor i of end_css\n\t\t\t\tif accel_props_re.test(i)\n\t\t\t\t\tii = end_css[i]\n\t\t\t\t\tif ii.join\n\t\t\t\t\t\tii = $(ii).px().join COMMASEP\n\t\t\t\t\telse if ii.toString\n\t\t\t\t\t\tii = ii.toString()\n\t\t\t\t\ttrans += \" \" + i + \"(\" + ii + \")\"\n\t\t\t\telse css[i] = end_css[i]\n\t\t\t(props.push i) for i of css\n\t\t\tif trans\n\t\t\t\tprops.push transformProperty\n\t\t\tcss[transitionProperty] = props.join COMMASEP\n\t\t\tcss[transitionDuration] = props.map(-> duration).join COMMASEP\n\t\t\tcss[transitionTiming] = props.map(-> easing).join COMMASEP\n\t\t\tif trans\n\t\t\t\tcss[transformProperty] = trans\n\t\t\t@css css\n\t\t\tif callback\n\t\t\t\t@delay duration, $.bound @, callback\n\t\thide: (callback) -> \n\t\t\t@each ->\n\t\t\t\tif @style\n\t\t\t\t\t@_display = \"\" \n\t\t\t\t\tif @style.display is not \"none\"\n\t\t\t\t\t\t@_display = @syle.display\n\t\t\t\t\t@style.display = \"none\"\n\t\t\t.trigger(\"hide\")\n\t\t\tif callback\n\t\t\t\t@delay updateDelay, $.bound @, callback\n\t\t\t@\n\t\tshow: (callback) -> \n\t\t\t@each ->\n\t\t\t\tif @style\n\t\t\t\t\t@style.display = @_display\n\t\t\t\t\tdelete @_display\n\t\t\t.trigger(\"show\")\n\t\t\tif callback\n\t\t\t\t@delay updateDelay, $.bound @, callback\n\t\t\t@\n\t\ttoggle: (callback) -> \n\t\t\t@weave(@css(\"display\"))\n\t\t\t\t.fold((display, node) ->\n\t\t\t\t\tif display is \"none\"\n\t\t\t\t\t\tnode.style.display = node._display or \"\"\n\t\t\t\t\t\tdelete node._display\n\t\t\t\t\t\t$(node).trigger \"show\"\n\t\t\t\t\telse\n\t\t\t\t\t\tnode._display = display\n\t\t\t\t\t\tnode.style.display = \"none\"\n\t\t\t\t\t\t$(node).trigger \"hide\"\n\t\t\t\t\tnode\n\t\t\t\t).delay(updateDelay, $.bound @, callback)\n\t\tfadeIn: (speed, callback) -> \n\t\t\t@.css('opacity','0.0')\n\t\t\t\t.show ->\n\t\t\t\t\t@transform {\n\t\t\t\t\t\topacity:\"1.0\",\n\t\t\t\t\t\ttranslate3d: [0,0,0]\n\t\t\t\t\t}, speed, callback\n\t\tfadeOut: (speed, callback, x = 0.0, y = 0.0) -> \n\t\t\t@transform {\n\t\t\t\topacity:\"0.0\",\n\t\t\t\ttranslate3d:[x,y,0.0]\n\t\t\t}, speed, -> @hide($.bound @, callback)\n\t\tfadeLeft: (speed, callback) -> @fadeOut speed, callback, \"-\"+@width().first(), 0.0\n\t\tfadeRight: (speed, callback) -> @fadeOut speed, callback, @width().first(), 0.0\n\t\tfadeUp: (speed, callback) -> @fadeOut speed, callback, 0.0, \"-\"+@height().first()\n\t\tfadeDown: (speed, callback)  -> @fadeOut speed, callback, 0.0, @height().first()\n\t}\n$.plugin\n\tprovides: 'Trie'\n, -> \n\tclass Trie\n\t\tconstructor: ->\n\t\t\t@length = 0\n\t\tinsert: (item, key=String item) -> return insert @, item, key.toLowerCase(), 0\n\t\tinsert = (t, item, key, n) ->\n\t\t\tt.length++\n\t\t\tif n < key.length\n\t\t\t\to = t.children or= {}\n\t\t\t\tinsert (o[key[n]] or= new Trie),\n\t\t\t\t\titem, key, n+1\n\t\t\telse\n\t\t\t\t(t.values or= []).push item\n\t\t\tt\n\t\tfind: (prefix) -> return find @, prefix.toLowerCase(), 0\n\t\tfind = (t, k, n) ->\n\t\t\tend = n >= k.length\n\t\t\tif end and t.values\n\t\t\t\tfor v in t.values\n\t\t\t\t\tbreak if (yield v) is false\n\t\t\telse for c,child of t.children\n\t\t\t\tif end or c is k[n]\n\t\t\t\t\t`yield* find(child,k,n+1)`\n\t\t\tnull\t\n\t\n\treturn { $: { Trie } }\n$.plugin\n\tprovides: \"type,is,inherit,extend,defineProperty,isType,are,as,isSimple,isDefined,isEmpty\"\n\tdepends: \"compat\"\n, ->\n\t{ max, min } = Math\n\tmaxHash = 0xFFFFFFFF\n\t__toString = Object.prototype.toString\n\tisType = (T, o) ->\n\t\tif not o? then T in [o,\"null\",\"undefined\"]\n\t\telse (o.constructor? and (o.constructor is T or o.constructor.name is T)) or\n\t\t\t__toString.apply(o) is \"[object #{T}]\" or\n\t\t\tisType T, o.__proto__ \n\tinherit = (parent, objs...) ->\n\t\treturn unless objs.length > 0\n\t\tobj = objs.shift()\n\t\tif typeof parent is \"function\"\n\t\t\tparent = parent.prototype\n\t\tif parent.__proto__ in [Object.prototype, null, undefined]\n\t\t\tparent.__proto__ = obj.__proto__\n\t\tobj.__proto__ = parent\n\t\tif objs.length > 0\n\t\t\treturn inherit obj, objs...\n\t\telse obj\n\t_type = do ->\n\t\tcache = {}\n\t\tbase =\n\t\t\tname: 'unknown'\n\t\t\tis: -> true\n\t\torder = []\n\t\t_with_cache = {} \n\t\t_with_insert = (method, type) ->\n\t\t\ta = (_with_cache[method] or= [])\n\t\t\tif (i = a.indexOf type) is -1\n\t\t\t\ta.push type\n\t\tregister = (name, data) ->\n\t\t\tdata.is or= -> false\n\t\t\tif name of cache\n\t\t\t\treturn _extend name, data\n\t\t\torder.unshift name if not (name of cache)\n\t\t\tcache[data.name = name] = if (base isnt data) then (inherit base, data) else data\n\t\t\tcache[name][name] = (o) -> o\n\t\t\tfor key of cache[name]\n\t\t\t\t_with_insert key, cache[name]\n\t\t\treturn cache[name]\n\t\t_extend = (name, data) ->\n\t\t\tif typeof name is \"string\"\n\t\t\t\tcache[name] or= register name, {}\n\t\t\t\tcache[name] = extend cache[name], data\n\t\t\t\tfor method of data\n\t\t\t\t\t_with_insert method, cache[name]\n\t\t\telse if typeof name is \"object\"\n\t\t\t\t(_extend k, name[k]) for k of name\n\t\t\tnull\n\t\tlookup = (obj) ->\n\t\t\tfor name in order\n\t\t\t\tif cache[name].is.call obj, obj\n\t\t\t\t\treturn cache[name]\n\t\t\tnull\n\t\tregister \"unknown\",   base\n\t\tregister \"object\",    is: (o) -> o? and (typeof o is \"object\") and (o.constructor?.name in [undefined, \"Object\"])\n\t\tregister \"array\",     is: Array.isArray or (o) -> isType Array, o\n\t\tregister \"map\",       is: (o) -> o and (o instanceof Map)\n\t\tregister \"buffer\",    is: $.global.Buffer.isBuffer or -> false \n\t\tregister \"error\",     is: (o) -> isType 'Error', o\n\t\tregister \"regexp\",    is: (o) -> isType 'RegExp', o\n\t\tregister \"string\",    is: (o) -> typeof o is \"string\" \n\t\tregister \"number\",    is: (o) -> typeof o is \"number\" and not isNaN(o)\n\t\tregister \"bool\",      is: (o) -> typeof o is \"boolean\" \n\t\tregister \"function\",  is: (o) -> typeof o is \"function\"\n\t\tregister \"class\",     is: (o) -> typeof o is \"function\" and ('prototype' of (props = Object.getOwnPropertyDescriptors o)) and not ('arguments' of props)\n\t\tregister \"global\",    is: (o) -> typeof o is \"object\" and 'setInterval' of o\n\t\tregister \"arguments\", is: (o) -> typeof o is \"object\" and 'callee' of o and 'length' of o\n\t\tregister \"undefined\", is: (x) -> x is undefined\n\t\tregister \"null\",      is: (x) -> x is null\n\t\treturn extend ((o) -> lookup(o).name),\n\t\t\tregister: register\n\t\t\tlookup: lookup\n\t\t\textend: _extend\n\t\t\tget: (t) -> cache[t]\n\t\t\tis: (t, o) -> cache[t]?.is.call(o, o) ? false\n\t\t\tas: (t, o, rest...) -> lookup(o)[t]?(o, rest...)\n\t\t\twith: (f) -> _with_cache[f] ? []\n\t_type.extend\n\t\tunknown:   { array: (o) -> [o] }\n\t\tnull:      { array:     -> [] }\n\t\tundefined: { array:     -> [] }\n\t\tarray:     { array: (o) -> o }\n\t\tnumber:    { array: (o) -> $.extend new Array(max(0,min(o,maxHash))), length: 0 }\n\t\targuments: { array: (o) -> Array.prototype.slice.apply o }\n\t_type.register \"bling\",\n\t\tis:     (o) -> o and isType $, o\n\t\tarray:  (o) -> (o and o.toArray()) or []\n\t\thash:   (o) -> o.map($.hash).reduce (a,x) -> ((a*a)+x) % maxHash\n\t\tstring: (o) -> $.symbol + \"([\" + o.map((x) -> $.type.lookup(x).string(x)).join(\", \") + \"])\"\n\t\trepr:   (o) -> $.symbol + \"([\" + o.map((x) -> $.type.lookup(x).repr(x)).join(\", \") + \"])\"\n\t_type.in = (types..., obj) ->\n\t\tfor type in types\n\t\t\treturn true if $.is type, obj\n\t\treturn false\n\t$:\n\t\tinherit: inherit\n\t\textend: extend\n\t\tdefineProperty: (o, name, opts) ->\n\t\t\tObject.defineProperty o, name, extend({ configurable: true, enumerable: true }, opts)\n\t\t\to\n\t\tisType: isType\n\t\ttype: _type\n\t\tis: _type.is\n\t\tare: (type, args...) ->\n\t\t\tfor a in args\n\t\t\t\treturn false unless $.is type, a\n\t\t\treturn true\n\t\tas: _type.as\n\t\tisDefined: (o) -> o?\n\t\tisSimple: (o) -> _type.in \"string\", \"number\", \"bool\", o\n\t\tisEmpty: (o) -> o in [\"\", null, undefined] \\\n\t\t\tor o.length is 0 or (typeof o is \"object\" and Object.keys(o).length is 0)\n\tdefineProperty: (name, opts) -> @each -> $.defineProperty @, name, opts\n$.plugin\n\tdepends: 'math'\n\tprovides: 'units'\n, ->\n\tunits = $ [\"px\",\"pt\",\"pc\",\"em\",\"%\",\"in\",\"cm\",\"mm\",\"ex\",\"lb\",\"kg\",\"yd\",\"ft\",\"m\", \"\"]\n\tUNIT_RE = null\n\tdo makeUnitRegex = ->\n\t\tjoined = units.filter(/.+/).join '|'\n\t\tUNIT_RE = new RegExp \"(\\\\d+\\\\.*\\\\d*)((?:#{joined})/*(?:#{joined})*)$\"\n\tparseUnits = (s) ->\n\t\tif UNIT_RE.test(s)\n\t\t\treturn UNIT_RE.exec(s)[2]\n\t\t\"\"\n\tconv = (a,b) ->\n\t\t[numer_a, denom_a] = a.split '/'\n\t\t[numer_b, denom_b] = b.split '/'\n\t\tif denom_a? and denom_b?\n\t\t\treturn conv(denom_b, denom_a) * conv(numer_a, numer_b)\n\t\tif a of conv and (b of conv[a])\n\t\t\treturn conv[a][b]()\n\t\t0\n\tlocker = (x) -> -> x\n\tfill = ->\n\tset = (from, to, f) ->\n\t\tconv[from] or= {}\n\t\tconv[from][to] = f\n\t\tif units.indexOf(from) is -1\n\t\t\tunits.push from\n\t\tif units.indexOf(to) is -1\n\t\t\tunits.push to\n\t\tmakeUnitRegex()\n\t\tfill()\n\tinit = ->\n\t\t$.type.register \"units\",\n\t\t\tis: (x) -> typeof x is \"string\" and UNIT_RE.test(x)\n\t\t\tnumber: (x) -> parseFloat(x)\n\t\t\tstring: (x) -> \"'#{x}'\"\n\t\tset 'pc', 'pt', -> 12\n\t\tset 'in', 'pt', -> 72\n\t\tset 'in', 'px', -> 96\n\t\tset 'in', 'cm', -> 2.54\n\t\tset 'm', 'ft', -> 3.281\n\t\tset 'yd', 'ft', -> 3\n\t\tset 'cm', 'mm', -> 10\n\t\tset 'm', 'cm', -> 100\n\t\tset 'm', 'meter', -> 1\n\t\tset 'm', 'meters', -> 1\n\t\tset 'ft', 'feet', -> 1\n\t\tset 'km', 'm', -> 1000\n\t\tset 'em', 'px', ->\n\t\t\tw = 0\n\t\t\ttry\n\t\t\t\tx = $(\"<span style='font-size:1em;visibility:hidden'>x</span>\").appendTo(\"body\")\n\t\t\t\tw = x.width().first()\n\t\t\t\tx.remove()\n\t\t\tw\n\t\tset 'ex', 'px', ->\n\t\t\tw = 0\n\t\t\ttry\n\t\t\t\tx = $(\"<span style='font-size:1ex;visibility:hidden'>x</span>\").appendTo(\"body\")\n\t\t\t\tw = x.width().first()\n\t\t\t\tx.remove()\n\t\t\tw\n\t\tset 'ex', 'em', -> 2\n\t\tset 'rad', 'deg', -> 57.3\n\t\tset 's', 'sec', -> 1\n\t\tset 's', 'ms', -> 1000\n\t\tset 'ms', 'ns', -> 1000000\n\t\tset 'min', 'sec', -> 60\n\t\tset 'hr', 'min', -> 60\n\t\tset 'hr', 'hour', -> 1\n\t\tset 'hr', 'hours', -> 1\n\t\tset 'day', 'hr', -> 24\n\t\tset 'day', 'days', -> 1\n\t\tset 'y', 'year', -> 1\n\t\tset 'y', 'years', -> 1\n\t\tset 'y', 'd', -> 365.25\n\t\tset 'g', 'gram', -> 1\n\t\tset 'g', 'grams', -> 1\n\t\tset 'kg', 'g', -> 1000\n\t\tset 'lb', 'g', -> 453.6\n\t\tset 'lb', 'oz', -> 16\n\t\tset 'f', 'frame', -> 1\n\t\tset 'f', 'frames', -> 1\n\t\tset 'sec', 'f', -> 60\n\t\tdo fill = ->\n\t\t\tconv[''] = {}\n\t\t\tone = locker 1.0\n\t\t\tfor a in units\n\t\t\t\tconv[a] or= {}\n\t\t\t\tconv[a][a] = conv[a][''] = conv[''][a] = one\n\t\t\tinfered = 1\n\t\t\twhile infered > 0\n\t\t\t\tinfered = 0\n\t\t\t\tfor a in units when a isnt ''\n\t\t\t\t\tconv[a] or= {}\n\t\t\t\t\tfor b in units when b isnt ''\n\t\t\t\t\t\tif (not conv a,b) and (conv b,a)\n\t\t\t\t\t\t\tconv[a][b] = locker 1.0/conv(b,a)\n\t\t\t\t\t\t\tinfered += 1\n\t\t\t\t\t\tfor c in units when c isnt ''\n\t\t\t\t\t\t\tif (conv a,b) and (conv b,c) and (not conv a,c)\n\t\t\t\t\t\t\t\tconv[a][c] = locker conv(a,b) * conv(b,c)\n\t\t\t\t\t\t\t\tinfered += 1\n\t\t\tnull\n\t\t$.units.enable = ->\n\tconvert = (unit, number) ->\n\t\tf = parseFloat(number)\n\t\tu = parseUnits(number)\n\t\tc = conv(u, unit)\n\t\tunless isFinite(c) and isFinite(f)\n\t\t\treturn number\n\t\t\"#{f * c}#{unit}\"\n\t{\n\t\t$:\n\t\t\tunits:\n\t\t\t\tenable: init\n\t\t\t\tset: set\n\t\t\t\tget: conv\n\t\t\t\tconvertTo: convert\n\t\tconvertTo: (unit) -> @map (x) -> convert unit, x\n\t\tunitMap: (f) ->\n\t\t\t@map (x) ->\n\t\t\t\tf.call((n = parseFloat x), n) + parseUnits x\n\t}\n$.plugin\n\tdepends: \"type\",\n\tprovides: \"url,URL\"\n, ->\n\turl_re = /\\b(?:([a-z+]+):)(?:\\/{1,2}([^?\\/#]*?))(\\/[^?]*)*(?:\\?([^#]+))*(?:#([^\\s]+))*$/i\n\tuser_pass_re = /^([^:]+):([^@]+)@/\n\tusername_re = /^([^:@]+)@/\n\thost_port_re = /^([^:]+):(\\d+)/\n\tparse_host = (host) ->\n\t\treturn {} unless host? and host.length > 0\n\t\tret = { host }\n\t\tif ret.host.indexOf(\",\") > -1 then $.extend ret, {\n\t\t\thosts: ret.host.split(\",\").map(parse_host)\n\t\t\thost: undefined\n\t\t} else\n\t\t\tif (m = ret.host.match user_pass_re) then $.extend ret, {\n\t\t\t\tusername: m[1]\n\t\t\t\tpassword: m[2]\n\t\t\t\thost: ret.host.replace user_pass_re, ''\n\t\t\t} else if (m = ret.host.match username_re) then $.extend ret, {\n\t\t\t\tusername: m[1]\n\t\t\t\thost: ret.host.replace username_re, ''\n\t\t\t}\n\t\t\tif (m = ret.host.match host_port_re) then $.extend ret, {\n\t\t\t\thost: m[1]\n\t\t\t\tport: m[2]\n\t\t\t}\n\t\treturn ret\n\tparse = (str, parseQuery=false) ->\n\t\tret = if (m = str?.match url_re) then {\n\t\t\tprotocol: m[1]\n\t\t\thost:     m[2]\n\t\t\tpath:     m[3]\n\t\t\tquery:    m[4]?.replace /^\\?/,''\n\t\t\thash:     m[5]?.replace /^#/, ''\n\t\t} else null\n\t\tif ret?\n\t\t\tif parseQuery\n\t\t\t\tquery = ret.query ? \"\"\n\t\t\t\tret.query = Object.create null\n\t\t\t\tfor pair in query.split('&')\n\t\t\t\t\tif (i = pair.indexOf '=') > -1\n\t\t\t\t\t\tret.query[pair.substring 0,i] = unescape pair.substring i+1\n\t\t\t\t\telse if pair.length > 0\n\t\t\t\t\t\tret.query[pair] = null\n\t\t\t\tdelete ret.query[\"\"]\n\t\t\t$.extend ret, parse_host(ret.host)\n\t\t\t$.keysOf(ret).each (key) ->\n\t\t\t\tswitch $.type ret[key]\n\t\t\t\t\twhen \"null\",\"undefined\" then delete ret[key]\n\t\t\t\t\twhen \"string\" then if ret[key].length is 0 then delete ret[key]\n\t\t\t\tnull\n\t\tret\n\tclean = (val, re, prefix = '', suffix ='') ->\n\t\tx = val ? \"\"\n\t\treturn if x and not re.test x then prefix+x+suffix else x\n\tstringify = (url) ->\n\t\tif $.is 'object', url.query\n\t\t\turl.query = (\"#{k}=#{v}\" for k,v of url.query).join(\"&\")\n\t\treturn [\n\t\t\tclean(url.protocol, /:$/, '', ':'),\n\t\t\tclean(url.host, /^\\//, '//'),\n\t\t\tclean(url.port, /^:/, ':'),\n\t\t\tclean(url.path, /^\\//, '/'),\n\t\t\tclean(url.query, /^\\?/, '?'),\n\t\t\tclean(url.hash, /^#/, '#')\n\t\t].join ''\n\treturn $: URL: { parse, stringify }\n$.plugin\n\tprovides: \"watchProperty\"\n\tdepends: \"type\"\n, ->\n\tOP_CHANGE = 'change' \n\tOP_INSERT = 'insert' \n\tOP_DELETE = 'delete' \n\t\n\twatchProperty = (obj, key, cb, prefix=\"\") -> \n\t\tif typeof key is 'string' and (i = key.indexOf \".\") > -1\n\t\t\tfirst = key.substr 0,i\n\t\t\treturn watchProperty obj[first], (key.substr i+1), cb, ((prefix?.length and prefix+'.'+ first) or  first)\n\t\tif $.is 'array', obj[key]\n\t\t\twatchArray obj[key], cb, ((prefix?.length and prefix+'.'+ key) or  key)\n\t\tprop = Object.getOwnPropertyDescriptor(obj, key)\n\t\t$.defineProperty obj, key,\n\t\t\tget: get = (prop.get ? -> prop.value)\n\t\t\tset: $.compose ($.partial cb, OP_CHANGE, ((prefix?.length and prefix+'.'+ key) or  key)), \\\n\t\t\t\t(prop.set or (prop.writable and (v) -> prop.value = v) or get)\n\twatchArray = (arr, cb, prefix=\"\") ->\n\t\tpcb = (op, key, value) ->\n\t\t\tcb op, ((prefix?.length and prefix+'.'+ key) or  key), value\n\t\t_watch = (method, _cb) ->\n\t\t\tsupr = arr[method]\n\t\t\tarr[method] = (a...) ->\n\t\t\t\ttry return supr.apply arr, a\n\t\t\t\tfinally _cb.apply arr, a\n\t\t\n\t\tdo rebindAll = ->\n\t\t\tfor i in [0...arr.length] by 1\n\t\t\t\twatchProperty arr, i, pcb\n\t\t\tnull\n\t\t\n\t\t_watch 'push', (item) ->\n\t\t\ti = @length - 1\n\t\t\twatchProperty @, i, pcb\n\t\t\tpcb OP_INSERT, i, item\n\t\t_watch 'unshift', (item) ->\n\t\t\trebindAll()\n\t\t\tpcb OP_INSERT, 0, item\n\t\t_watch 'pop', ->\n\t\t\tpcb OP_DELETE, @length, 1\n\t\t_watch 'shift', ->\n\t\t\trebindAll()\n\t\t\tpcb OP_DELETE, @length, 1\n\t\t_watch 'splice', (i, n, v) ->\n\t\t\tif v isnt undefined\n\t\t\t\ti += 1\n\t\t\t\tn -= 1\n\t\t\telse if n > 0\n\t\t\t\ti = @length\n\t\t\tif n > 0\n\t\t\t\tpcb OP_DELETE, i, n\n\t\tarr\n\treturn { $: { watchProperty } }\n"
  ]
}